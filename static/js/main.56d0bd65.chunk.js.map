{"version":3,"sources":["assets/icons/left-barrier.svg","assets/icons/left-side.svg","assets/icons/left-border.svg","assets/icons/right-border.svg","assets/icons/right-side.svg","assets/icons/right-barrier.svg","classes/TORCSUtils.js","classes/TrackHeader.js","classes/TrackGraphic.js","classes/SegmentSide.js","classes/SegmentBorder.js","classes/SegmentBarrier.js","classes/Pits.js","classes/Segment.js","classes/Straight.js","classes/Curve.js","classes/MainTrack.js","classes/Track.js","ui/theme/index.js","threejs/TrackObjectGeometries.js","threejs/TrackObjects.js","classes/EditorHook.js","threejs/EditorObjects.js","threejs/SceneManager.js","threejs/GeneralLights.js","components/TrackViewer.js","threejs/threeEntryPoint.js","components/ValueSlidingEditor.js","components/StraightEditor.js","components/CurveEditor.js","components/SegmentBorderEditor.js","components/SegmentSideEditor.js","components/SegmentBarrierEditor.js","components/SegmentOuterPartsEditor.js","components/SegmentEditor.js","components/MainTrackEditor.js","App.js","serviceWorker.js","index.js","assets/icons/straight.svg","assets/icons/curve-right.svg","assets/icons/curve-left.svg"],"names":["module","exports","__webpack_require__","p","TORCSUtils","i_xmlNode","i_key","attribute","querySelector","parentElement","getAttribute","Number","TrackHeader","name","category","version","author","description","this","getStringAttribute","getNumericAttribute","TrackGraphic","DescriptionFile","SegmentSide","i_segment","Object","classCallCheck","startWidth","endWidth","surface","segment","undefined","SegmentBorder","width","height","style","SegmentBarrier","Pits","side","entry","start","end","exit","length","Segment","i_mainTrack","_this","mainTrack","startZ","endZ","m_surface","m_leftBorder","m_leftSide","m_leftBarrier","defaultSurface","leftBorder","defaultLeftBorder","leftSide","defaultLeftSide","leftBarrier","defaultLeftBarrier","rightBorder","m_rightBorder","defaultRightBorder","rightSide","m_rightSide","defaultRightSide","rightBarrier","m_rightBarrier","defaultRightBarrier","i_border","i_side","i_barrier","Straight","i_initialPosition","i_initialAngleAroundZ","mainAxis","THREE","rotatedMainAxis","copy","applyAxisAngle","position","rotation","Curve","isRight","arc","startRadius","endRadius","profilStepsLength","bakedValues","bake","totalLength","numberOfSteps","i_partIndex","ratio","getNumberOfSteps","stepLength","getPartRadius","Math","PI","field","value","arcRad","stepsLength","steps","floor","curLength","dradius","tmpAngle","tmpRadius","curStep","totalPosition","totalRotation","i","_this$computePartDisp","computePartDisplacement","addVectors","i_part","partPosition","partRotation","axisZ","numSteps","getPartArc","positionDelta","radius","initialPosition","subVectors","MainTrack","i_track","profilStopsLength","defaultProfilStepsLength","pits","track","trackSegments","trackSegmentsNode","trackSegmentNodes","toConsumableArray","children","theTrack","filter","child","nodeName","map","tsNode","type","loadTORCSXml","i_insertionIndex","splice","Track","header","graphic","isDirty","i_xmlDocument","isInteger","segmentIndex","getSegmentIndex","computeEndOfSegment","segmentPosition","segmentAngleAroundZ","_segment$computeDispl","computeDisplacement","retval","forEach","ts","getLength","displacement","createMuiTheme","palette","primary","main","secondary","themeName","typography","useNextVariants","getXYFromPolar","i_radius","i_theta","cos","sin","reverseFacesWindingOrder","i_geometry","l","faces","face","temp","a","c","faceVertexUvs","vector2","computeFaceNormals","computeVertexNormals","StraightBorderGeometry","i_startOffset","i_endOffset","i_isRight","borderGeometry","vertices","translate","scale","StraightSideGeometry","sideGeometry","StraightBarrierGeometry","barrierGeometry","CurvePartBorderGeometry","i_isInner","i_subdivisions","subdivisions","innerRadius","i_subdivision","outerRadius","borderWidth","borderInnerRadius","borderOuterRadius","angle","partArc","s","_borderGeometry$verti","_borderGeometry$faces","deltaAngle","is","ie","os","oe","vc","higherInner","push","apply","x","y","CurvePartSideGeometry","numberOfParts","partStartWidth","partEndWidth","sideWidth","sideInnerRadius","sideOuterRadius","sideOuterEndRadius","_sideGeometry$vertice","_sideGeometry$faces","CurvePartBarrierGeometry","deltaPartOffset","subStartOffset","subEndOffset","innerStartRadius","innerEndRadius","outerStartRadius","outerEndRadius","barrierWidth","barrierInnerEndRadius","barrierOuterStartRadius","barrierOuterEndRadius","_barrierGeometry$vert","_barrierGeometry$face","TrackObjects","i_segmentToHighlight","trackSegmentMaterial","color","transparent","shadowSide","trackSegmentHighlightMaterial","opacity","trackBorderMaterial","trackSideMaterial","trackBarrierMaterial","add","createSegmentObject","buildMainTrackObjects","buildObjects","i_highlight","segment3DObject","i_straightSegment","getOuterGeometries","rightOffsetStart","rightOffsetEnd","segmentStart","computeStartOfSegment","geometry","_getOuterGeometries","_getOuterGeometries2","slicedToArray","leftBorderGeometry","leftSideGeometry","leftBarrierGeometry","_getOuterGeometries3","_getOuterGeometries4","rightBorderGeometry","rightSideGeometry","rightBarrierGeometry","g","rotateZ","z","trackMesh","leftBorderMesh","leftSideMesh","leftBarrierMesh","rightBorderMesh","rightSideMesh","rightBarrierMesh","m","castShadow","receiveShadow","linewidth","userData","createStraightObject","i_curveSegment","geometries","borderGeometries","sideGeometries","barrierGeometries","currentStartPosition","currentRotation","_loop","getOuterPartGeometries","deltaWidth","partDisplacement","partDisplacementDelta","centerPosition","partGeometry","_getOuterPartGeometri","_getOuterPartGeometri2","_getOuterPartGeometri3","_getOuterPartGeometri4","partGeometries","mergedGeometry","mesh","updateMatrix","merge","matrix","mergedEdgeGeometry","meshes","cg","sg","bg","createCurveObject","EditorHook","i_data","data","InterSegmentHooks","hookMaterial","hookHighlightMaterial","hookHoverMaterial","buildHighlightedObjects","i_positions","i_material","createInterSegmentHook","attitude","size","rotateX","interSegmentIndex","i_positionsToHighlight","i_positionToHighlightHover","buildMainTrackInterSegmentHooks","SceneManager","canvas","clock","raycaster","mouseClickPosition","track3DObject","selectedSegment","selectedSegment3DObject","isInHookMode","hookObjects","selectedHooks","highlightedHook","screenDimensions","scene","background","buildScene","lights","ambientLight","sunLight","set","normalize","multiplyScalar","shadow","mapSize","d","camera","left","right","top","bottom","near","far","bias","testLight","update","time","GeneralLights","renderer","_ref","antialias","alpha","DPR","window","devicePixelRatio","setPixelRatio","setSize","gammaInput","gammaOutput","shadowMap","enabled","buildRender","sceneSubjects","_buildCameras","_ref2","aspectRatio","orthogonalCamera","perspectiveCamera","updateProjectionMatrix","buildCameras","_buildCameras2","xyPlane","xyPlaneGeometry","buildXYPlane","updateSelectedSegment","remove","clearHookMode","updateHookMode","pick","i_x","i_y","i_targetObject","i_acceptableObjectCriterion","domElement","setFromCamera","intersects","intersectObject","obj3D","object","obj","parent","elapsedTime","getElapsedTime","render","onWindowResize","aspect","onMouseMove","hook","updateTrack","zoom","i_in","translateOnAxis","moveCamera","i_xDelta","i_yDelta","i_buttons","i_shiftKey","delta","startIntersects","newScreenPoint","endIntersects","xyDelta","point","up","rotateOnAxis","rotateOnWorldAxis","pickTrackSegment","pickEditorHook","setPerspectiveCamera","setOrthogonalCamera","enterHookMode","exitHookMode","addSegmentActions","action","icon","iconStraight","iconCurveRight","iconCurveLeft","TrackViewer","props","possibleConstructorReturn","getPrototypeOf","call","state","perspective","mouseLeftDown","mouseLeftDragging","mouseLeftJustDragged","mouseLeftDownLastPositionX","mouseLeftDownLastPositionY","addSegmentSpeedDialOpen","m_currentPickingPromise","three","containerElement","document","createElement","appendChild","createCanvas","sceneManager","resizeCanvas","offsetWidth","offsetHeight","onresize","requestAnimationFrame","threeEntryPoint","threeRootElement","nextProps","nextState","prevProps","prevState","e","deltaY","button","setState","screenX","screenY","xDistance","yDistance","abs","buttons","shiftKey","pickX","clientX","offsetLeft","pickY","clientY","offsetTop","pickedObject","pickedHook","m_currentPickingPromiseFunction","onSegmentSelected","key","setOrthographicView","setPerspectiveView","i_action","_this2","handlePickHookAction","pickHook","addSegmentSpeedDialHandleClick","i_pickResult","segmentToAdd","hookIndex","onSegmentAdded","_this3","Promise","resolve","then","_this4","classes","react_default","className","ref","element","viewer","onWheel","mouseWheel","onMouseDown","mouseDown","onMouseUp","mouseUp","mouseMove","tabIndex","onKeyDown","keyDown","onClick","click","lab_index_es","ariaLabel","speedDial","open","src","alt","speedDialIcon","tooltipTitle","actionHandler","Component","withStyles","theme","root","spacing","unit","maxWidth","maxHeight","ValueSlidingEditor","event","onChange","parseFloat","target","_this$props","min","max","step","index_es","textbox","v","aria-labelledby","container","slider","defaultProps","display","flexGrow","flexBasis","marginRight","padding","StraightEditor","handleChange","onSegmentUpdated","id","components_ValueSlidingEditor","CurveEditor","setValue","SegmentBorderEditor","border","onBorderUpdated","_classNames","classNames","defineProperty","SegmentSideEditor","isWidthFixed","onSideUpdated","checked","control","handleFixedWidthChange","label","SegmentBarrierEditor","barrier","onBarrierUpdated","SegmentOuterPartsEditor","setRightBorder","setLeftBorder","setRightSide","setLeftSide","setRightBarrier","setLeftBarrier","createImgTag","i_src","fullWidth","tab","labelContainer","iconLeftBarrier","iconLeftSide","iconLeftBorder","iconRightBorder","iconRightSide","iconRightBarrier","variant","components_SegmentBorderEditor","handleBorderUpdate","components_SegmentSideEditor","handleSideUpdate","components_SegmentBarrierEditor","handleBarrierUpdate","flex","minWidth","& img","paddingLeft","paddingRight","SegmentEditor","segmentName","segmentType","segmentIcon","segmentProperties","components_StraightEditor","handleSegmentUpdated","CurveEditor_CurveEditor","segmentLength","title","subheader","toFixed","avatar","aria-label","components_SegmentOuterPartsEditor","MainTrackEditor","totalDelta","getTotalDelta","Fragment","defaultExpanded","flexDirection","getTotalLength","expanded","SegmentEditor_SegmentEditor","App","openTrackFile","i_filePath","fileReader","FileReader","self","assertThisInitialized","onload","content","result","trackDocument","DOMParser","parseFromString","loadDocument","readAsText","currentTrack","selectSegment","addSegment","insertionIndex","lodash","clone","insertSegmentAt","updateSegment","newTrack","core_styles","appBar","toolbar","component","noWrap","upload","files","paper","drawerPaper","MainTrackEditor_MainTrackEditor","components_TrackViewer","trackViewer","toolbarIcon","objectSpread","alignItems","justifyContent","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","concat","enteringScreen","menuButton","menuButtonHidden","whiteSpace","paddingTop","drawerPaperClose","overflowX","breakpoints","appBarSpacer","overflow","marginTop","h5","marginBottom","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.56d0bd65.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/left-barrier.e0f89871.svg\";","module.exports = __webpack_public_path__ + \"static/media/left-side.532bf422.svg\";","module.exports = __webpack_public_path__ + \"static/media/left-border.9bbbbe82.svg\";","module.exports = __webpack_public_path__ + \"static/media/right-border.ae05dc41.svg\";","module.exports = __webpack_public_path__ + \"static/media/right-side.f2712725.svg\";","module.exports = __webpack_public_path__ + \"static/media/right-barrier.d737db36.svg\";","export default class TORCSUtils {\r\n\tstatic getStringAttribute(i_xmlNode, i_key) {\r\n\t\tif (!i_xmlNode) { return ''; }\r\n\t\tlet attribute = i_xmlNode.querySelector('attstr[name=\"' + i_key + '\"]');\r\n\t\tif (attribute && attribute.parentElement === i_xmlNode) {\r\n\t\t\treturn attribute.getAttribute('val') + '';\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tstatic getNumericAttribute(i_xmlNode, i_key) {\r\n\t\tif (!i_xmlNode) { return 0; }\r\n\t\tlet attribute = i_xmlNode.querySelector('attnum[name=\"' + i_key + '\"]');\r\n\t\tif (attribute && attribute.parentElement === i_xmlNode) {\r\n\t\t\treturn Number(attribute.getAttribute('val'));\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n}","import TORCSUtils from \"./TORCSUtils\";\r\n\r\nexport default class TrackHeader {\r\n\tname = 'Track';\r\n\tcategory = 'road';\r\n\tversion = '1';\r\n\tauthor = '';\r\n\tdescription = '';\r\n\r\n\tloadTORCSXml(i_xmlNode) {\r\n\t\tthis.name = TORCSUtils.getStringAttribute(i_xmlNode, 'name');\r\n\t\tthis.category = TORCSUtils.getStringAttribute(i_xmlNode, 'category');\r\n\t\tthis.version = TORCSUtils.getNumericAttribute(i_xmlNode, 'version');\r\n\t\tthis.author = TORCSUtils.getStringAttribute(i_xmlNode, 'author');\r\n\t\tthis.description = TORCSUtils.getStringAttribute(i_xmlNode, 'description');\r\n\t}\r\n}","export default class TrackGraphic {\r\n\tDescriptionFile = ''\r\n}","import TORCSUtils from \"./TORCSUtils\";\r\n\r\nexport default class SegmentSide {\r\n\tstartWidth = 4;\r\n\tendWidth = 4;\r\n\tsurface = 'grass';\r\n\r\n\tsegment = undefined;\r\n\r\n\tconstructor(i_segment) {\r\n\t\tthis.segment = i_segment;\r\n\t}\r\n\r\n\tloadTORCSXml(i_xmlNode) {\r\n\t\tthis.startWidth = TORCSUtils.getNumericAttribute(i_xmlNode, 'start width');\r\n\t\tthis.endWidth = TORCSUtils.getNumericAttribute(i_xmlNode, 'end width');\r\n\t\tthis.surface = TORCSUtils.getStringAttribute(i_xmlNode, 'surface');\r\n\t}\r\n}","import TORCSUtils from \"./TORCSUtils\";\r\n\r\nexport default class SegmentBorder {\r\n\twidth = 0.5;\r\n\theight = 0.05;\r\n\tsurface = 'curb-5cm-r';\r\n\tstyle = 'plan';\r\n\r\n\tsegment = undefined;\r\n\r\n\tconstructor(i_segment) {\r\n\t\tthis.segment = i_segment;\r\n\t}\r\n\r\n\tloadTORCSXml(i_xmlNode) {\r\n\t\tthis.width = TORCSUtils.getNumericAttribute(i_xmlNode, 'width');\r\n\t\tthis.height = TORCSUtils.getNumericAttribute(i_xmlNode, 'height');\r\n\t\tthis.surface = TORCSUtils.getStringAttribute(i_xmlNode, 'surface');\r\n\t\tthis.style = TORCSUtils.getStringAttribute(i_xmlNode, 'style');\r\n\t}\r\n}","import TORCSUtils from \"./TORCSUtils\";\r\n\r\nexport default class SegmentBarrier {\r\n\twidth = 0.1;\r\n\theight = 1;\r\n\tsurface = 'barrier';\r\n\tstyle = 'curb';\r\n\r\n\tsegment = undefined;\r\n\r\n\tconstructor(i_segment) {\r\n\t\tthis.segment = i_segment;\r\n\t}\r\n\r\n\tloadTORCSXml(i_xmlNode) {\r\n\t\tthis.width = TORCSUtils.getNumericAttribute(i_xmlNode, 'width');\r\n\t\tthis.height = TORCSUtils.getNumericAttribute(i_xmlNode, 'height');\r\n\t\tthis.surface = TORCSUtils.getStringAttribute(i_xmlNode, 'surface');\r\n\t\tthis.style = TORCSUtils.getStringAttribute(i_xmlNode, 'style');\r\n\t}\r\n}","export default class Pits {\r\n\tside = 'right';\r\n\tentry = '';\r\n\tstart = '';\r\n\tend = '';\r\n\texit = '';\r\n\tlength = 0;\r\n\twidth = 0;\r\n}","export default class Segment {\r\n\tmainTrack = undefined;\r\n\tname = '';\r\n\tstartZ = 0;\r\n\tendZ = 0;\r\n\tstartWidth = 10;\r\n\tendWidth = 10;\r\n\t\r\n\tm_surface = undefined;\r\n\r\n\tm_leftBorder = undefined;\r\n\tm_leftSide = undefined;\r\n\tm_leftBarrier = undefined;\r\n\tm_leftBorder = undefined;\r\n\tm_leftSide = undefined;\r\n\tm_leftBarrier = undefined;\r\n\t\r\n\tconstructor(i_mainTrack) {\r\n\t\tthis.mainTrack = i_mainTrack;\r\n\t}\r\n\t\r\n\tsurface = () => this.m_surface || this.mainTrack.defaultSurface;\r\n\r\n\tleftBorder   = () => this.m_leftBorder  || this.mainTrack.defaultLeftBorder;\r\n\tleftSide     = () => this.m_leftSide    || this.mainTrack.defaultLeftSide;\r\n\tleftBarrier  = () => this.m_leftBarrier || this.mainTrack.defaultLeftBarrier;\r\n\trightBorder  = () => this.m_rightBorder  || this.mainTrack.defaultRightBorder;\r\n\trightSide    = () => this.m_rightSide    || this.mainTrack.defaultRightSide;\r\n\trightBarrier = () => this.m_rightBarrier || this.mainTrack.defaultRightBarrier;\r\n\r\n\tsetLeftBorder(i_border) { \r\n\t\tthis.m_leftBorder = i_border;\r\n\t}\r\n\tsetLeftSide(i_side) { \r\n\t\tthis.m_leftSide = i_side;\r\n\t}\r\n\tsetLeftBarrier(i_barrier) { \r\n\t\tthis.m_leftBarrier = i_barrier;\r\n\t}\r\n\tsetRightBorder(i_border) { \r\n\t\tthis.m_rightBorder = i_border;\r\n\t}\r\n\tsetRightSide(i_side) { \r\n\t\tthis.m_rightSide = i_side;\r\n\t}\r\n\tsetRightBarrier(i_barrier) { \r\n\t\tthis.m_rightBarrier = i_barrier;\r\n\t}\r\n}\r\n","import Segment from \"./Segment\";\r\nimport * as THREE from 'three';\r\n\r\nexport default class Straight extends Segment {\r\n\tlength = 1;\r\n\r\n\tcomputeDisplacement(i_initialPosition, i_initialAngleAroundZ) {\r\n\t\tlet mainAxis = new THREE.Vector3(this.length, 0, 0);\r\n\t\tlet rotatedMainAxis = new THREE.Vector3();\r\n\t\trotatedMainAxis.copy(mainAxis);\r\n\t\trotatedMainAxis.applyAxisAngle(new THREE.Vector3(0, 0, 1), i_initialAngleAroundZ);\r\n\r\n\t\t/*let finalPosition = new THREE.Vector3();\r\n\t\tfinalPosition.addVectors(i_initialPosition, rotatedMainAxis);\r\n\t\t\r\n\t\tlet finalAngleAroundZ = i_initialAngleAroundZ;*/\r\n\r\n\t\treturn {\r\n\t\t\tposition: rotatedMainAxis,\r\n\t\t\trotation: 0\r\n\t\t};\r\n\t}\r\n\r\n\tgetLength() {\r\n\t\treturn this.length;\r\n\t}\r\n}\r\n","import Segment from \"./Segment\";\r\nimport * as THREE from 'three';\r\n\r\nexport default class Curve extends Segment {\r\n\tisRight = true;\r\n\tarc = 90;\r\n\tstartRadius = 20;\r\n\tendRadius = 20;\r\n\r\n\tprofilStepsLength = 4;\r\n\r\n\tbakedValues = undefined;\r\n\t\r\n\tgetLength() {\r\n\t\tif (!this.bakedValues) { this.bake(); }\r\n\t\treturn this.bakedValues.totalLength;\r\n\t}\r\n\r\n\tgetNumberOfSteps() {\r\n\t\tif (!this.bakedValues) { this.bake(); }\r\n\t\treturn this.bakedValues.numberOfSteps;\r\n\t}\r\n\r\n\tgetPartRadius(i_partIndex) {\r\n\t\tlet ratio = this.getNumberOfSteps() === 1 \r\n\t\t\t? 1\r\n\t\t\t: 1.0 / (this.getNumberOfSteps() - 1)\r\n\t\t\t;\r\n\t\treturn this.startRadius + (this.endRadius - this.startRadius) * i_partIndex * ratio;\r\n\t}\r\n\r\n\tgetPartArc(i_partIndex) {\r\n\t\tif (!this.bakedValues) { this.bake(); }\r\n\t\treturn this.bakedValues.stepLength / this.getPartRadius(i_partIndex) * (this.isRight ? -1 : 1) * 180/Math.PI;\r\n\t}\r\n\r\n\tgetPartLength(i_partIndex) {\r\n\t\tif (!this.bakedValues) { this.bake(); }\r\n\t\treturn this.bakedValues.stepLength;\r\n\t}\r\n\r\n\tsetValue(field, value) {\r\n\t\tthis[field] = value;\r\n\t\tthis.bakedValues = undefined;\r\n\t}\r\n\r\n\tbake() {\r\n\t\tconst arcRad = this.arc * Math.PI/180;\r\n\t\tconst length = (this.startRadius + this.endRadius) / 2 * arcRad;\r\n\t\tconst stepsLength = this.profilStepsLength;\r\n\t\tconst steps = Math.floor(length / stepsLength) + 1;\r\n\t\t\r\n\t\tlet curLength = length / steps;\r\n\r\n\t\tif (this.endRadius !== this.startRadius) {\r\n\t\t\tconst dradius = (this.endRadius - this.startRadius) / ((steps - 1) || 1);\r\n\t\t\t\r\n\t\t\tlet tmpAngle = 0;\r\n\t\t\tlet tmpRadius = this.startRadius;\r\n\r\n\t\t\tfor (let curStep = 0; curStep < steps; ++curStep) {\r\n\t\t\t\ttmpAngle += curLength / tmpRadius;\r\n\t\t\t\ttmpRadius += dradius;\r\n\t\t\t}\r\n\r\n\t\t\tcurLength *= arcRad / tmpAngle;\r\n\t\t}\r\n\r\n\t\tthis.bakedValues = {\r\n\t\t\ttotalLength: curLength * steps,\r\n\t\t\tnumberOfSteps: steps,\r\n\t\t\tstepLength: curLength\r\n\t\t};\r\n\t}\r\n\r\n\tcomputeDisplacement(i_initialPosition, i_initialAngleAroundZ) {\r\n\t\tlet totalPosition = new THREE.Vector3();\r\n\t\tlet totalRotation = 0;\r\n\t\tfor (let i = 0; i < this.getNumberOfSteps(); ++i) {\r\n\t\t\tlet { position, rotation } = this.computePartDisplacement(i, i_initialPosition, i_initialAngleAroundZ);\r\n\t\t\ttotalPosition.addVectors(totalPosition, position);\r\n\t\t\ttotalRotation += rotation;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tposition: totalPosition,\r\n\t\t\trotation: totalRotation\r\n\t\t};\r\n\t}\r\n\r\n\tcomputePartDisplacement(i_part, i_initialPosition, i_initialAngleAroundZ) {\r\n\t\t//let totalArc = this.arc * (this.isRight ? -1 : 1) * Math.PI/180;\r\n\t\tlet partPosition = new THREE.Vector3();\r\n\t\tlet partRotation = 0;\r\n\t\tlet totalRotation = i_initialAngleAroundZ;\r\n\t\tconst axisZ = new THREE.Vector3(0, 0, 1);\r\n\r\n\t\tlet numSteps = this.getNumberOfSteps();\r\n\r\n\t\tfor (let p = 0; p <= i_part && p < numSteps; ++p) {\r\n\t\t\tconst partArc = this.getPartArc(p) * Math.PI/180;\r\n\t\t\tpartRotation = partArc;\r\n\r\n\t\t\tlet positionDelta = new THREE.Vector3();\r\n\t\t\tif (p === i_part) {\r\n\t\t\t\tlet radius = this.getPartRadius(p);\r\n\t\t\t\tlet initialPosition = new THREE.Vector3(0, -radius * (this.isRight ? -1 : 1), 0);\r\n\t\t\t\tinitialPosition.applyAxisAngle(axisZ, totalRotation);\r\n\t\t\t\tpositionDelta.copy(initialPosition);\r\n\t\t\t\tpositionDelta.applyAxisAngle(axisZ, partRotation);\r\n\t\t\t\tpositionDelta.subVectors(positionDelta, initialPosition);\r\n\t\t\t}\r\n\r\n\t\t\tpartPosition.copy(positionDelta);\r\n\t\t\ttotalRotation += partRotation;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tposition: partPosition,\r\n\t\t\trotation: partRotation\r\n\t\t};\r\n\t}\r\n}\r\n","import SegmentSide from \"./SegmentSide\";\r\nimport SegmentBorder from \"./SegmentBorder\";\r\nimport SegmentBarrier from \"./SegmentBarrier\";\r\nimport Pits from \"./Pits\";\r\nimport Straight from \"./Straight\";\r\nimport Curve from \"./Curve\";\r\nimport TORCSUtils from \"./TORCSUtils\";\r\n\r\nexport default class MainTrack {\r\n\twidth = 10;\r\n\tprofilStopsLength = 4;\r\n\tdefaultSurface = 'asphalt2-lines';\r\n\t\r\n\tdefaultProfilStepsLength = 4;\r\n\r\n\tdefaultLeftSide = new SegmentSide();\r\n\tdefaultLeftBorder = new SegmentBorder();\r\n\tdefaultLeftBarrier = new SegmentBarrier();\r\n\r\n\tdefaultRightSide = new SegmentSide();\r\n\tdefaultRightBorder = new SegmentBorder();\r\n\tdefaultRightBarrier = new SegmentBarrier();\r\n\r\n\tpits = new Pits();\r\n\r\n\ttrack = undefined;\r\n\ttrackSegments = [];\r\n\t\r\n\tconstructor(i_track) {\r\n\t\tthis.track = i_track;\r\n\t}\r\n\r\n\tloadTORCSXml(i_xmlNode) {\r\n\t\tthis.width = TORCSUtils.getNumericAttribute(i_xmlNode, 'width');\r\n\t\tthis.profilStopsLength = TORCSUtils.getNumericAttribute(i_xmlNode, 'profil steps length');\r\n\t\tthis.defaultSurface = TORCSUtils.getStringAttribute(i_xmlNode, 'surface');\r\n\r\n\t\tlet trackSegmentsNode = i_xmlNode.querySelector('section[name=\"Track Segments\"]');\r\n\t\tlet trackSegmentNodes = [...trackSegmentsNode.children];\r\n\t\tlet theTrack = this;\r\n\t\tthis.trackSegments = trackSegmentNodes\r\n\t\t\t.filter((child) => child.nodeName === 'section')\r\n\t\t\t.map((tsNode) => {\r\n\t\t\t\tlet type = TORCSUtils.getStringAttribute(tsNode, 'type');\r\n\t\t\t\tlet segment = undefined;\r\n\t\t\t\tswitch (type)\r\n\t\t\t\t{\r\n\t\t\t\tcase 'str':\r\n\t\t\t\t\tsegment = new Straight(this);\r\n\t\t\t\t\tsegment.length = TORCSUtils.getNumericAttribute(tsNode, 'lg');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'rgt':\r\n\t\t\t\tcase 'lft':\r\n\t\t\t\t\tsegment = new Curve(this);\r\n\t\t\t\t\tsegment.isRight = type === 'rgt';\r\n\t\t\t\t\tsegment.arc = TORCSUtils.getNumericAttribute(tsNode, 'arc');\r\n\t\t\t\t\tsegment.startRadius = TORCSUtils.getNumericAttribute(tsNode, 'radius');\r\n\t\t\t\t\tsegment.endRadius = TORCSUtils.getNumericAttribute(tsNode, 'end radius') || segment.startRadius;\r\n\t\t\t\t\tsegment.profilStepsLength = TORCSUtils.getNumericAttribute(tsNode, 'profil steps length') || this.defaultProfilStepsLength;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (segment)\r\n\t\t\t\t{\r\n\t\t\t\t\tsegment.name = tsNode.getAttribute('name');\r\n\t\t\t\t\tsegment.startZ = TORCSUtils.getNumericAttribute(tsNode, 'z start');\r\n\t\t\t\t\tsegment.endZ = TORCSUtils.getNumericAttribute(tsNode, 'z end');\r\n\t\t\t\t\tsegment.m_surface = TORCSUtils.getStringAttribute(tsNode, 'surface');\r\n\t\t\t\t\tsegment.startWidth = theTrack.width;\r\n\t\t\t\t\tsegment.endWidth = theTrack.width;\r\n\r\n\t\t\t\t\tsegment.m_leftBorder = new SegmentBorder(segment); \r\n\t\t\t\t\tsegment.m_leftBorder.loadTORCSXml(tsNode.querySelector('section[name=\"Left Border\"]'));\r\n\t\t\t\t\tsegment.m_leftSide = new SegmentSide(segment); \r\n\t\t\t\t\tsegment.m_leftSide.loadTORCSXml(tsNode.querySelector('section[name=\"Left Side\"]'));\r\n\t\t\t\t\tsegment.m_leftBarrier = new SegmentBarrier(segment); \r\n\t\t\t\t\tsegment.m_leftBarrier.loadTORCSXml(tsNode.querySelector('section[name=\"Left Barrier\"]'));\r\n\r\n\t\t\t\t\tsegment.m_rightBorder = new SegmentBorder(segment); \r\n\t\t\t\t\tsegment.m_rightBorder.loadTORCSXml(tsNode.querySelector('section[name=\"Right Border\"]'));\r\n\t\t\t\t\tsegment.m_rightSide = new SegmentSide(segment); \r\n\t\t\t\t\tsegment.m_rightSide.loadTORCSXml(tsNode.querySelector('section[name=\"Right Side\"]'));\r\n\t\t\t\t\tsegment.m_rightBarrier = new SegmentBarrier(segment); \r\n\t\t\t\t\tsegment.m_rightBarrier.loadTORCSXml(tsNode.querySelector('section[name=\"Right Barrier\"]'));\r\n\t\t\t\t}\r\n\t\t\t\treturn segment;\r\n\t\t\t});\r\n\t}\r\n\r\n\tinsertSegmentAt(i_segment, i_insertionIndex) {\r\n\t\tthis.trackSegments.splice(i_insertionIndex, 0, i_segment);\r\n\t}\r\n}","import * as THREE from 'three';\r\nimport TrackHeader from \"./TrackHeader\";\r\nimport TrackGraphic from \"./TrackGraphic\";\r\nimport MainTrack from \"./MainTrack\";\r\nimport Segment from \"./Segment\";\r\n\r\nexport default class Track {\r\n\theader = new TrackHeader();\r\n\tgraphic = new TrackGraphic();\r\n\tmainTrack = new MainTrack(this);\r\n\tisDirty = false;\r\n\r\n\tloadTORCSXml(i_xmlDocument) {\r\n\t\tthis.header.loadTORCSXml(i_xmlDocument.querySelector('section[name=\"Header\"]'));\r\n\t\tthis.mainTrack.loadTORCSXml(i_xmlDocument.querySelector('section[name=\"Main Track\"]'));\r\n\t}\r\n\r\n\tsetDirty() {\r\n\t\tthis.isDirty = true;\r\n\t}\r\n\r\n\tgetSegmentIndex(i_segment) {\r\n\t\tfor (let i = 0; i < this.mainTrack.trackSegments.length; ++i) {\r\n\t\t\tlet segment = this.mainTrack.trackSegments[i];\r\n\t\t\tif (segment === i_segment) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tcomputeEndOfSegment(i_segment) {\r\n\t\tif (!(i_segment instanceof Segment || Number.isInteger(i_segment))) { return undefined; }\r\n\r\n\t\tif (i_segment instanceof Segment) {\r\n\t\t\tlet segmentIndex = this.getSegmentIndex(i_segment);\r\n\t\t\tif (segmentIndex !== undefined) {\r\n\t\t\t\treturn this.computeEndOfSegment(segmentIndex);\r\n\t\t\t}\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\tlet segmentPosition = new THREE.Vector3(0, 0, 0);\r\n\t\tlet segmentAngleAroundZ = 0;\r\n\r\n\t\tfor (let i = 0; i < this.mainTrack.trackSegments.length && i <= i_segment; ++i) {\r\n\t\t\tlet segment = this.mainTrack.trackSegments[i];\r\n\r\n\t\t\tlet { position, rotation } = segment.computeDisplacement(segmentPosition, segmentAngleAroundZ);\r\n\t\t\tsegmentPosition.addVectors(segmentPosition, position);\r\n\t\t\tsegmentAngleAroundZ += rotation;\r\n\t\t}\r\n\r\n\t\treturn { position: segmentPosition, rotation: segmentAngleAroundZ };\r\n\t}\r\n\r\n\tcomputeStartOfSegment(i_segment) {\r\n\t\tif (!(i_segment instanceof Segment || Number.isInteger(i_segment))) { return undefined; }\r\n\r\n\t\tif (i_segment instanceof Segment) {\r\n\t\t\tlet segmentIndex = this.getSegmentIndex(i_segment);\r\n\t\t\tif (segmentIndex !== undefined) {\r\n\t\t\t\treturn this.computeEndOfSegment(segmentIndex - 1);\r\n\t\t\t}\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\treturn this.computeEndOfSegment(i_segment - 1);\r\n\t}\r\n\r\n\tgetTotalLength() {\r\n\t\tlet retval = 0;\r\n\t\tthis.mainTrack.trackSegments.forEach(ts => { retval += ts.getLength(); });\r\n\t\treturn retval;\r\n\t}\r\n\r\n\tgetTotalDelta() {\r\n\t\tlet retval = {\r\n\t\t\tposition: new THREE.Vector3(),\r\n\t\t\trotation: 0\r\n\t\t};\r\n\t\tthis.mainTrack.trackSegments.forEach(ts => { \r\n\t\t\tlet displacement = ts.computeDisplacement(new THREE.Vector3(), retval.rotation);\r\n\t\t\tretval.rotation += displacement.rotation;\r\n\t\t\tretval.position.addVectors(retval.position, displacement.position);\r\n\t\t});\r\n\t\treturn retval;\r\n\t}\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst palette = {\r\n\tprimary: { main: '#006064' },\r\n  secondary: { main: '#FF9800' }\r\n};\r\nconst themeName = 'TrackEditor';\r\n\r\nexport default createMuiTheme({\r\n\tpalette, \r\n\tthemeName,\r\n\ttypography: {\r\n\t\tuseNextVariants: true\r\n\t}\r\n});\r\n","import * as THREE from 'three';\r\n\r\nexport let getXYFromPolar = (i_radius, i_theta) => \r\n\tnew THREE.Vector2(i_radius * Math.cos(i_theta), i_radius * Math.sin(i_theta));\r\n\r\nexport let reverseFacesWindingOrder = (i_geometry) => {\r\n\tfor (var i = 0, l = i_geometry.faces.length; i < l; i++) {\r\n\r\n\t\tvar face = i_geometry.faces[i];\r\n\t\tvar temp = face.a;\r\n\t\tface.a = face.c;\r\n\t\tface.c = temp;\r\n\r\n\t}\r\n\r\n\tvar faceVertexUvs = i_geometry.faceVertexUvs[0];\r\n\tfor (i = 0, l = faceVertexUvs.length; i < l; i++) {\r\n\r\n\t\tvar vector2 = faceVertexUvs[i][0];\r\n\t\tfaceVertexUvs[i][0] = faceVertexUvs[i][2];\r\n\t\tfaceVertexUvs[i][2] = vector2;\r\n\t}\r\n\r\n\ti_geometry.computeFaceNormals();\r\n\ti_geometry.computeVertexNormals();\r\n}\r\n\r\nexport let StraightBorderGeometry = \r\n\t(i_startOffset, i_endOffset, i_border, i_isRight) => {\r\n\tlet borderGeometry = new THREE.Geometry();\r\n\tborderGeometry.vertices = [\r\n\t\tnew THREE.Vector3(i_startOffset + 0,              0,                       0),\r\n\t\tnew THREE.Vector3(i_endOffset   + 0,              i_border.segment.length, 0),\r\n\t\tnew THREE.Vector3(i_endOffset   + i_border.width, i_border.segment.length, i_border.height),\r\n\t\tnew THREE.Vector3(i_startOffset + i_border.width, 0,                       i_border.height),\r\n\t\tnew THREE.Vector3(i_endOffset   + i_border.width, i_border.segment.length, 0),\r\n\t\tnew THREE.Vector3(i_startOffset + i_border.width, 0,                       0)\r\n\t];\r\n\tborderGeometry.faces = [ \r\n\t\tnew THREE.Face3(0, 1, 2), new THREE.Face3(0, 2, 3), \r\n\t\tnew THREE.Face3(0, 1, 4), new THREE.Face3(0, 4, 5), \r\n\t\tnew THREE.Face3(3, 2, 4), new THREE.Face3(3, 4, 5), \r\n\t\tnew THREE.Face3(0, 3, 5), \r\n\t\tnew THREE.Face3(1, 2, 4), \r\n\t];\r\n\tborderGeometry.computeFaceNormals();\r\n\tborderGeometry.translate(0, -i_border.segment.length/2, 0);\r\n\tif (!i_isRight) {\r\n\t\tborderGeometry.scale(-1, 1, 1);\r\n\t\treverseFacesWindingOrder(borderGeometry);\r\n\t}\r\n\r\n\treturn borderGeometry;\r\n};\r\n\r\nexport let StraightSideGeometry = \r\n\t(i_startOffset, i_endOffset, i_side, i_isRight) => {\r\n\tlet sideGeometry = new THREE.Geometry();\r\n\tsideGeometry.vertices = [\r\n\t\tnew THREE.Vector3(i_startOffset + 0,                 0,                     0),\r\n\t\tnew THREE.Vector3(i_endOffset   + 0,                 i_side.segment.length, 0),\r\n\t\tnew THREE.Vector3(i_endOffset   + i_side.endWidth,   i_side.segment.length, 0),\r\n\t\tnew THREE.Vector3(i_startOffset + i_side.startWidth, 0,                     0)\r\n\t];\r\n\tsideGeometry.faces = [ new THREE.Face3(0, 1, 2), new THREE.Face3(0, 2, 3) ];\r\n\tsideGeometry.computeFaceNormals();\r\n\tsideGeometry.translate(0, -i_side.segment.length/2, 0);\r\n\tif (!i_isRight) {\r\n\t\tsideGeometry.scale(-1, 1, 1);\r\n\t\treverseFacesWindingOrder(sideGeometry);\r\n\t}\r\n\r\n\treturn sideGeometry\r\n};\r\n\r\nexport let StraightBarrierGeometry = \r\n\t(i_startOffset, i_endOffset, i_barrier, i_isRight) => {\r\n\tlet barrierGeometry = new THREE.Geometry();\r\n\tbarrierGeometry.vertices = [\r\n\t\tnew THREE.Vector3(i_startOffset + 0,               0,                        0),\r\n\t\tnew THREE.Vector3(i_endOffset   + 0,               i_barrier.segment.length, 0),\r\n\t\tnew THREE.Vector3(i_endOffset   + i_barrier.width, i_barrier.segment.length, 0),\r\n\t\tnew THREE.Vector3(i_startOffset + i_barrier.width, 0,                        0),\r\n\t\tnew THREE.Vector3(i_startOffset + 0,               0,                        i_barrier.height),\r\n\t\tnew THREE.Vector3(i_endOffset   + 0,               i_barrier.segment.length, i_barrier.height),\r\n\t\tnew THREE.Vector3(i_endOffset   + i_barrier.width, i_barrier.segment.length, i_barrier.height),\r\n\t\tnew THREE.Vector3(i_startOffset + i_barrier.width, 0,                        i_barrier.height),\r\n\t];\r\n\tbarrierGeometry.faces = [\r\n\t\tnew THREE.Face3(2, 1, 0), new THREE.Face3(3, 2, 0),\r\n\t\tnew THREE.Face3(4, 5, 6), new THREE.Face3(4, 6, 7),\r\n\t\tnew THREE.Face3(0, 1, 5), new THREE.Face3(0, 5, 4),\r\n\t\tnew THREE.Face3(6, 2, 3), new THREE.Face3(3, 7, 6),\r\n\t\tnew THREE.Face3(0, 4, 7), new THREE.Face3(0, 7, 3),\r\n\t\tnew THREE.Face3(1, 6, 5), new THREE.Face3(1, 2, 6),\r\n\t]\r\n\tbarrierGeometry.computeFaceNormals();\r\n\tbarrierGeometry.translate(0, -i_barrier.segment.length/2, 0);\r\n\tif (!i_isRight) {\r\n\t\tbarrierGeometry.scale(-1, 1, 1);\r\n\t\treverseFacesWindingOrder(barrierGeometry);\r\n\t}\r\n\r\n\treturn barrierGeometry;\r\n}\r\n\r\nexport let CurvePartBorderGeometry = \r\n\t(i_part, i_startOffset, i_endOffset, i_border, i_isInner, i_subdivisions) => {\r\n\tlet subdivisions = i_subdivisions || 4;\r\n\r\n\tlet radius = i_border.segment.getPartRadius(i_part);\r\n\tlet innerRadius = (i_subdivision) => radius - i_startOffset - (i_endOffset - i_startOffset) * i_subdivision / subdivisions;\r\n\tlet outerRadius = (i_subdivision) => radius + i_startOffset + (i_endOffset - i_startOffset) * i_subdivision / subdivisions;\r\n\r\n\tlet borderGeometry = new THREE.Geometry();\r\n\tlet borderWidth = (i_subdivision) => i_border.width;\r\n\tlet borderInnerRadius = (i_subdivision) => \r\n\t\ti_isInner \r\n\t\t\t? innerRadius(i_subdivision) - borderWidth(i_subdivision)\r\n\t\t\t: outerRadius(i_subdivision);\r\n\tlet borderOuterRadius = (i_subdivision) => \r\n\t\ti_isInner\r\n\t\t\t? innerRadius(i_subdivision)\r\n\t\t\t: outerRadius(i_subdivision) + borderWidth(i_subdivision);\r\n\t\r\n\tlet angle = 0;\r\n\tlet partArc = i_border.segment.computePartDisplacement(i_part, new THREE.Vector3(), 0).rotation;\r\n\r\n\tfor (let s = 0; s < subdivisions; ++s) {\r\n\t\tlet deltaAngle = partArc / subdivisions;\r\n\r\n\t\tlet is = getXYFromPolar(borderInnerRadius(s), angle);\r\n\t\tlet ie = getXYFromPolar(borderInnerRadius(s), angle + deltaAngle);\r\n\t\tlet os = getXYFromPolar(borderOuterRadius(s), angle);\r\n\t\tlet oe = getXYFromPolar(borderOuterRadius(s), angle + deltaAngle);\r\n\r\n\t\tlet vc = borderGeometry.vertices.length;\r\n\t\tlet higherInner = (i_isInner ^ i_border.segment.i_isRight);\r\n\t\tborderGeometry.vertices.push(...[\r\n\t\t\tnew THREE.Vector3(is.x, is.y, 0),\r\n\t\t\tnew THREE.Vector3(ie.x, ie.y, 0),\r\n\t\t\tnew THREE.Vector3(higherInner ? ie.x : oe.x, higherInner ? ie.y : oe.y, i_border.height),\r\n\t\t\tnew THREE.Vector3(higherInner ? is.x : os.x, higherInner ? is.y : os.y, i_border.height),\r\n\t\t\tnew THREE.Vector3(oe.x, oe.y, 0),\r\n\t\t\tnew THREE.Vector3(os.x, os.y, 0),\r\n\t\t]);\r\n\t\tborderGeometry.faces.push(...[\r\n\t\t\tnew THREE.Face3(0 + vc, 1 + vc, 2 + vc), new THREE.Face3(0 + vc, 2 + vc, 3 + vc),\r\n\t\t\tnew THREE.Face3(0 + vc, 4 + vc, 1 + vc), new THREE.Face3(0 + vc, 5 + vc, 4 + vc),\r\n\t\t\tnew THREE.Face3(5 + vc, 3 + vc, 2 + vc), new THREE.Face3(5 + vc, 4 + vc, 2 + vc),\r\n\t\t\tnew THREE.Face3(0 + vc, 3 + vc, 5 + vc),\r\n\t\t\tnew THREE.Face3(1 + vc, 4 + vc, 2 + vc),\r\n\t\t]);\r\n\r\n\t\tangle += deltaAngle;\r\n\t}\r\n\r\n\tborderGeometry.computeFaceNormals();\r\n\r\n\treturn borderGeometry;\r\n};\r\n\r\nexport let CurvePartSideGeometry = \r\n\t(i_part, i_startOffset, i_endOffset, i_side, i_isInner, i_subdivisions) => {\r\n\tconst subdivisions = i_subdivisions || 4;\r\n\r\n\tconst radius = i_side.segment.getPartRadius(i_part);\r\n\tconst innerRadius = radius - i_startOffset;\r\n\tconst outerRadius = radius + i_startOffset;\r\n\r\n\tlet sideGeometry = new THREE.Geometry();\r\n\tconst numberOfParts = i_side.segment.getNumberOfSteps();\r\n\tconst partStartWidth = i_side.startWidth + (i_side.endWidth - i_side.startWidth) * i_part / numberOfParts;\r\n\tconst partEndWidth = i_side.startWidth + (i_side.endWidth - i_side.startWidth) * (i_part + 1) / numberOfParts;\r\n\tlet sideWidth = (i_subdivision) => partStartWidth + (partEndWidth - partStartWidth) * i_subdivision / subdivisions;\r\n\tlet sideInnerRadius = (i_subdivision) => \r\n\t\ti_isInner \r\n\t\t\t? innerRadius - sideWidth(i_subdivision)\r\n\t\t\t: outerRadius;\r\n\tlet sideOuterRadius = (i_subdivision) => \r\n\t\ti_isInner\r\n\t\t\t? innerRadius\r\n\t\t\t: outerRadius + sideWidth(i_subdivision);\r\n\tlet sideInnerEndRadius = (i_subdivision) => sideInnerRadius(i_subdivision + 1);\r\n\tlet sideOuterEndRadius = (i_subdivision) => sideOuterRadius(i_subdivision + 1);\r\n\t\r\n\tlet angle = 0;\r\n\tlet partArc = i_side.segment.computePartDisplacement(i_part, new THREE.Vector3(), 0).rotation;\r\n\r\n\tfor (let s = 0; s < subdivisions; ++s) {\r\n\t\tlet deltaAngle = partArc / subdivisions;\r\n\r\n\t\tlet is = getXYFromPolar(sideInnerRadius(s), angle);\r\n\t\tlet ie = getXYFromPolar(sideInnerEndRadius(s), angle + deltaAngle);\r\n\t\tlet os = getXYFromPolar(sideOuterRadius(s), angle);\r\n\t\tlet oe = getXYFromPolar(sideOuterEndRadius(s), angle + deltaAngle);\r\n\r\n\t\tlet vc = sideGeometry.vertices.length;\r\n\t\tsideGeometry.vertices.push(...[\r\n\t\t\tnew THREE.Vector3(is.x, is.y, 0),\r\n\t\t\tnew THREE.Vector3(ie.x, ie.y, 0),\r\n\t\t\tnew THREE.Vector3(oe.x, oe.y, 0),\r\n\t\t\tnew THREE.Vector3(os.x, os.y, 0),\r\n\t\t]);\r\n\t\tsideGeometry.faces.push(...[\r\n\t\t\tnew THREE.Face3(0 + vc, 1 + vc, 2 + vc), new THREE.Face3(0 + vc, 2 + vc, 3 + vc),\r\n\t\t]);\r\n\r\n\t\tangle += deltaAngle;\r\n\t}\r\n\r\n\tsideGeometry.computeFaceNormals();\r\n\tif (!i_side.segment.isRight) {\r\n\t\treverseFacesWindingOrder(sideGeometry);\r\n\t}\r\n\r\n\treturn sideGeometry;\r\n};\r\n\r\nexport let CurvePartBarrierGeometry = \r\n\t(i_part, i_startOffset, i_endOffset, i_barrier, i_isInner, i_subdivisions) => {\r\n\tlet subdivisions = i_subdivisions || 4;\r\n\r\n\tconst radius = i_barrier.segment.getPartRadius(i_part);\r\n\tconst deltaPartOffset = i_endOffset - i_startOffset;\r\n\tlet subStartOffset = (i_subdivision) => i_startOffset + deltaPartOffset * i_subdivision / subdivisions;\r\n\tlet subEndOffset = (i_subdivision) => i_startOffset + deltaPartOffset * (i_subdivision + 1) / subdivisions;\r\n\tlet innerStartRadius = (i_subdivision) => radius - subStartOffset(i_subdivision);\r\n\tlet innerEndRadius = (i_subdivision) => radius - subEndOffset(i_subdivision);\r\n\tlet outerStartRadius = (i_subdivision) => radius + subStartOffset(i_subdivision);\r\n\tlet outerEndRadius = (i_subdivision) => radius + subEndOffset(i_subdivision);\r\n\r\n\tlet barrierGeometry = new THREE.Geometry();\r\n\tlet barrierWidth = (i_subdivision) => i_barrier.width;\r\n\tlet barrierInnerStartRadius = (i_subdivision) => \r\n\t\ti_isInner \r\n\t\t\t? innerStartRadius(i_subdivision) - barrierWidth(i_subdivision)\r\n\t\t\t: outerStartRadius(i_subdivision);\r\n\tlet barrierInnerEndRadius = (i_subdivision) => \r\n\t\ti_isInner \r\n\t\t\t? innerEndRadius(i_subdivision) - barrierWidth(i_subdivision)\r\n\t\t\t: outerEndRadius(i_subdivision);\r\n\tlet barrierOuterStartRadius = (i_subdivision) => \r\n\t\ti_isInner\r\n\t\t\t? innerStartRadius(i_subdivision)\r\n\t\t\t: outerStartRadius(i_subdivision) + barrierWidth(i_subdivision);\r\n\tlet barrierOuterEndRadius = (i_subdivision) => \r\n\t\ti_isInner\r\n\t\t\t? innerEndRadius(i_subdivision)\r\n\t\t\t: outerEndRadius(i_subdivision) + barrierWidth(i_subdivision);\r\n\t\r\n\tlet angle = 0;\r\n\tconst partArc = i_barrier.segment.computePartDisplacement(i_part, new THREE.Vector3(), 0).rotation;\t\r\n\t\r\n\tfor (let s = 0; s < subdivisions; ++s) {\r\n\t\tconst deltaAngle = partArc / subdivisions;\r\n\t\tconst innerStartRadius = barrierInnerStartRadius(s);\r\n\t\tconst outerStartRadius = barrierOuterStartRadius(s);\r\n\t\tconst innerEndRadius = barrierInnerEndRadius(s);\r\n\t\tconst outerEndRadius = barrierOuterEndRadius(s);\r\n\t\t\r\n\t\tlet is = getXYFromPolar(innerStartRadius, angle);\r\n\t\tlet ie = getXYFromPolar(innerEndRadius, angle + deltaAngle);\r\n\t\tlet os = getXYFromPolar(outerStartRadius, angle);\r\n\t\tlet oe = getXYFromPolar(outerEndRadius, angle + deltaAngle);\r\n\r\n\t\tlet vc = barrierGeometry.vertices.length;\r\n\t\tbarrierGeometry.vertices.push(...[\r\n\t\t\tnew THREE.Vector3(is.x, is.y, 0),\r\n\t\t\tnew THREE.Vector3(ie.x, ie.y, 0),\r\n\t\t\tnew THREE.Vector3(oe.x, oe.y, 0),\r\n\t\t\tnew THREE.Vector3(os.x, os.y, 0),\r\n\t\t\tnew THREE.Vector3(is.x, is.y, i_barrier.height),\r\n\t\t\tnew THREE.Vector3(ie.x, ie.y, i_barrier.height),\r\n\t\t\tnew THREE.Vector3(oe.x, oe.y, i_barrier.height),\r\n\t\t\tnew THREE.Vector3(os.x, os.y, i_barrier.height),\r\n\t\t]);\r\n\t\tbarrierGeometry.faces.push(...[\r\n\t\t\tnew THREE.Face3(0 + vc, 2 + vc, 1 + vc), new THREE.Face3(0 + vc, 3 + vc, 2 + vc),\r\n\t\t\tnew THREE.Face3(4 + vc, 5 + vc, 6 + vc), new THREE.Face3(4 + vc, 6 + vc, 7 + vc),\r\n\t\t\tnew THREE.Face3(0 + vc, 1 + vc, 5 + vc), new THREE.Face3(0 + vc, 5 + vc, 4 + vc),\r\n\t\t\tnew THREE.Face3(3 + vc, 7 + vc, 6 + vc), new THREE.Face3(3 + vc, 6 + vc, 2 + vc),\r\n\t\t\tnew THREE.Face3(0 + vc, 4 + vc, 7 + vc), new THREE.Face3(0 + vc, 7 + vc, 3 + vc),\r\n\t\t\tnew THREE.Face3(2 + vc, 6 + vc, 5 + vc), new THREE.Face3(2 + vc, 5 + vc, 1 + vc),\r\n\t\t]);\r\n\r\n\t\tangle += deltaAngle;\r\n\t}\r\n\r\n\tbarrierGeometry.computeFaceNormals();\r\n\r\n\treturn barrierGeometry;\r\n};\r\n\r\n///////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n","import * as THREE from 'three';\r\nimport Straight from '../classes/Straight';\r\nimport Curve from '../classes/Curve';\r\nimport Track from '../classes/Track';\r\nimport { reverseFacesWindingOrder, StraightBorderGeometry, StraightSideGeometry, StraightBarrierGeometry, CurvePartBorderGeometry, CurvePartSideGeometry, CurvePartBarrierGeometry } from './TrackObjectGeometries';\r\nimport Segment from '../classes/Segment';\r\n\r\nexport default (i_track, i_segmentToHighlight) => {\r\n\tconst trackSegmentMaterial = new THREE.MeshStandardMaterial({ color: \"#111\", transparent: false, side: THREE.DoubleSide, shadowSide: THREE.CullFaceBack });\r\n\tconst trackSegmentHighlightMaterial = new THREE.MeshBasicMaterial({ color: \"#bb0\", transparent: true, opacity: .5, side: THREE.DoubleSide });\r\n\t\r\n\tconst trackBorderMaterial = new THREE.MeshStandardMaterial({ color: \"#c66\", transparent: false, side: THREE.DoubleSide, shadowSide: THREE.CullFaceBack });\r\n\tconst trackSideMaterial = new THREE.MeshStandardMaterial({ color: \"#6c6\", transparent: false, side: THREE.DoubleSide, shadowSide: THREE.CullFaceBack });\r\n\tconst trackBarrierMaterial = new THREE.MeshStandardMaterial({ color: \"#999\", transparent: false, side: THREE.DoubleSide, shadowSide: THREE.CullFaceBack });\r\n\t\r\n\tconst axisZ = new THREE.Vector3(0, 0, 1);\r\n\r\n\t/*const loader = new THREE.FontLoader();\r\n\tvar font = undefined;\r\n\tloader.load( 'assets/fonts/helvetiker_regular.typeface.json', function ( i_font ) {\r\n\t\tfont = i_font;\r\n\t}, undefined, e => {\r\n\t\tconsole.error(e);\r\n\t});*/\r\n\t\r\n\tif (i_track instanceof Track) {\r\n\t\treturn buildObjects(i_track, i_segmentToHighlight);\r\n\t}\r\n\telse if (i_track instanceof Segment) {\r\n\t\treturn createSegmentObject(i_track, true);\r\n\t}\r\n\t\r\n\tfunction buildObjects(i_track, i_segmentToHighlight) {\r\n\t\tlet retval = new THREE.Group();\r\n\t\tretval.add(buildMainTrackObjects(i_track.mainTrack, i_segmentToHighlight));\r\n\t\treturn retval;\r\n\t}\r\n\t\r\n\tfunction buildMainTrackObjects(i_mainTrack, i_segmentToHighlight) {\r\n\t\tlet retval = new THREE.Group();\r\n\t\ti_mainTrack.trackSegments.forEach(segment => retval.add(createSegmentObject(segment, segment === i_segmentToHighlight)));\r\n\t\treturn retval;\r\n\t}\r\n\r\n\tfunction createSegmentObject(segment, i_highlight) {\r\n\t\tlet segment3DObject = undefined;\r\n\t\tif (segment instanceof Straight) {\r\n\t\t\tsegment3DObject = createStraightObject(segment, i_highlight);\r\n\t\t}\r\n\t\telse if (segment instanceof Curve) {\r\n\t\t\tsegment3DObject = createCurveObject(segment, i_highlight);\r\n\t\t}\r\n\r\n\t\treturn segment3DObject;\r\n\t}\r\n\t\r\n\tfunction createStraightObject(i_straightSegment, i_highlight) {\r\n\r\n\t\tlet getOuterGeometries = (i_border, i_side, i_barrier, i_isRight) => {\r\n\t\t\tlet rightOffsetStart = i_straightSegment.startWidth/2;\r\n\t\t\tlet rightOffsetEnd = rightOffsetStart;\r\n\r\n\t\t\tlet borderGeometry = StraightBorderGeometry(rightOffsetStart, rightOffsetEnd, i_border, i_isRight);\r\n\r\n\t\t\trightOffsetStart += i_border.width;\r\n\t\t\trightOffsetEnd += i_border.width;\r\n\r\n\t\t\tlet sideGeometry = StraightSideGeometry(rightOffsetStart, rightOffsetEnd, i_side, i_isRight);\r\n\r\n\t\t\trightOffsetStart += i_side.startWidth;\r\n\t\t\trightOffsetEnd += i_side.endWidth;\r\n\r\n\t\t\tlet barrierGeometry = StraightBarrierGeometry(rightOffsetStart, rightOffsetEnd, i_barrier, i_isRight);\r\n\r\n\t\t\treturn [ borderGeometry, sideGeometry, barrierGeometry ];\r\n\t\t};\r\n\r\n\t\tlet retval = new THREE.Group();\r\n\t\tlet segmentStart = i_straightSegment.mainTrack.track.computeStartOfSegment(i_straightSegment);\r\n\t\tlet displacement = i_straightSegment.computeDisplacement(segmentStart.position, segmentStart.rotation);\r\n\r\n\t\tlet geometry = new THREE.PlaneGeometry(i_straightSegment.startWidth, i_straightSegment.length, 1, 1);\r\n\r\n\t\tlet [ leftBorderGeometry, leftSideGeometry, leftBarrierGeometry ] = \r\n\t\t\tgetOuterGeometries(i_straightSegment.leftBorder(), i_straightSegment.leftSide(), i_straightSegment.leftBarrier(), false);\r\n\t\tlet [ rightBorderGeometry, rightSideGeometry, rightBarrierGeometry ] = \r\n\t\t\tgetOuterGeometries(i_straightSegment.rightBorder(), i_straightSegment.rightSide(), i_straightSegment.rightBarrier(), true);\r\n\t\t\r\n\t\tlet geometries = [\r\n\t\t\tgeometry, \r\n\t\t\tleftBorderGeometry, rightBorderGeometry,\r\n\t\t\tleftSideGeometry, rightSideGeometry,\r\n\t\t\tleftBarrierGeometry, rightBarrierGeometry\r\n\t\t];\r\n\t\t\r\n\t\tgeometries.forEach(g => {\r\n\t\t\tg.rotateZ(segmentStart.rotation - Math.PI/2);\r\n\t\t\tg.translate(segmentStart.position.x + displacement.position.x/2, \r\n\t\t\t\tsegmentStart.position.y + displacement.position.y/2, \r\n\t\t\t\tsegmentStart.position.z + displacement.position.z/2);\r\n\t\t\t});\r\n\r\n\t\tlet trackMesh = new THREE.Mesh(geometry, trackSegmentMaterial);\r\n\t\tretval.add(new THREE.LineSegments(\r\n\t\t\tnew THREE.EdgesGeometry(geometry),\r\n\t\t\tnew THREE.LineBasicMaterial({ color: 0xff00ff })\r\n\t\t\t));\r\n\t\t\r\n\t\tlet leftBorderMesh = new THREE.Mesh(leftBorderGeometry, trackBorderMaterial);\r\n\t\tlet leftSideMesh = new THREE.Mesh(leftSideGeometry, trackSideMaterial);\r\n\t\tlet leftBarrierMesh = new THREE.Mesh(leftBarrierGeometry, trackBarrierMaterial);\r\n\t\tlet rightBorderMesh = new THREE.Mesh(rightBorderGeometry, trackBorderMaterial);\r\n\t\tlet rightSideMesh = new THREE.Mesh(rightSideGeometry, trackSideMaterial);\r\n\t\tlet rightBarrierMesh = new THREE.Mesh(rightBarrierGeometry, trackBarrierMaterial);\r\n\r\n\t\tlet meshes = [ \r\n\t\t\ttrackMesh, \r\n\t\t\tleftBarrierMesh, leftBorderMesh, leftSideMesh,\r\n\t\t\trightBarrierMesh, rightBorderMesh, rightSideMesh,\r\n\t\t\t];\r\n\t\tmeshes.forEach(m => {\r\n\t\t\tm.castShadow = true;\r\n\t\t\tm.receiveShadow = true;\r\n\t\t\tretval.add(m);\r\n\t\t});\r\n\r\n\t\tif (i_highlight) {\r\n\t\t\tretval.add(new THREE.Mesh(geometry, trackSegmentHighlightMaterial));\r\n\t\t\tretval.add(new THREE.LineSegments(\r\n\t\t\t\tnew THREE.EdgesGeometry(geometry),\r\n\t\t\t\tnew THREE.LineBasicMaterial({ color: 0xdd6600, linewidth: 5 })\r\n\t\t\t\t));\r\n\t\t}\r\n\r\n\t\t//retval.add(createText(i_straightSegment.name, findCenterPoint(geometry)));\r\n\r\n\t\tretval.userData = i_straightSegment;\r\n\t\treturn retval;\r\n\t}\r\n\t\r\n\tfunction createCurveObject(i_curveSegment, i_highlight) {\r\n\t\tlet retval = new THREE.Group();\r\n\t\tlet segmentStart = i_curveSegment.mainTrack.track.computeStartOfSegment(i_curveSegment);\r\n\t\t//let displacement = i_curveSegment.computeDisplacement(segmentStart.position, segmentStart.rotation);\r\n\t\t\r\n\t\tlet geometries = [];\r\n\t\tlet borderGeometries = [];\r\n\t\tlet sideGeometries = [];\r\n\t\tlet barrierGeometries = [];\r\n\t\t\r\n\t\tlet numberOfSteps = i_curveSegment.getNumberOfSteps();\r\n\t\tlet currentStartPosition = new THREE.Vector3();\r\n\t\tcurrentStartPosition.copy(segmentStart.position);\r\n\t\tlet currentRotation = segmentStart.rotation;\r\n\t\tfor (let p = 0; p < numberOfSteps; ++p) {\r\n\r\n\t\t\t// eslint-disable-next-line no-loop-func\r\n\t\t\tlet getOuterPartGeometries = (i_border, i_side, i_barrier, i_isInner) => {\r\n\r\n\t\t\t\tlet rightOffsetStart = i_curveSegment.startWidth/2;\r\n\t\t\t\tlet rightOffsetEnd = rightOffsetStart;\r\n\r\n\t\t\t\tlet borderGeometry = CurvePartBorderGeometry(p, rightOffsetStart, rightOffsetEnd, i_border, i_isInner);\r\n\r\n\t\t\t\trightOffsetStart += i_border.width;\r\n\t\t\t\trightOffsetEnd += i_border.width;\r\n\r\n\t\t\t\tlet sideGeometry = CurvePartSideGeometry(p, rightOffsetStart, rightOffsetEnd, i_side, i_isInner);\r\n\r\n\t\t\t\tconst deltaWidth = i_side.endWidth - i_side.startWidth;\r\n\t\t\t\trightOffsetStart += i_side.startWidth + deltaWidth / numberOfSteps * p;\r\n\t\t\t\trightOffsetEnd += i_side.startWidth + deltaWidth / numberOfSteps * (p + 1);\r\n\r\n\t\t\t\tlet barrierGeometry = CurvePartBarrierGeometry(p, rightOffsetStart, rightOffsetEnd, i_barrier, i_isInner);\r\n\t\r\n\t\t\t\treturn [ borderGeometry, sideGeometry, barrierGeometry ];\r\n\t\t\t};\r\n\r\n\t\t\tlet partDisplacement = i_curveSegment.computePartDisplacement(p, segmentStart.position, segmentStart.rotation);\r\n\t\t\tlet partArc = partDisplacement.rotation;\r\n\t\t\t\r\n\t\t\tlet partDisplacementDelta = new THREE.Vector3();\r\n\t\t\tpartDisplacementDelta.subVectors(partDisplacement.position, segmentStart.position);\r\n\t\t\t\r\n\t\t\tlet radius = i_curveSegment.getPartRadius(p);\r\n\t\t\tlet innerRadius = radius - i_curveSegment.startWidth / 2;\r\n\t\t\tlet outerRadius = radius + i_curveSegment.startWidth / 2;\r\n\t\t\tlet centerPosition = new THREE.Vector3(0, radius * (i_curveSegment.isRight ? -1 : 1), 0);\r\n\t\t\tcenterPosition.copy(centerPosition.applyAxisAngle(axisZ, currentRotation));\r\n\t\t\tcenterPosition.addVectors(centerPosition, currentStartPosition);\r\n\t\t\t\r\n\t\t\tlet partGeometry = new THREE.RingGeometry(\r\n\t\t\t\tinnerRadius,\r\n\t\t\t\touterRadius,\r\n\t\t\t\t1, 1, 0, partArc\r\n\t\t\t\t);\r\n\t\t\tif (i_curveSegment.isRight) {\r\n\t\t\t\treverseFacesWindingOrder(partGeometry);\r\n\t\t\t}\r\n\r\n\t\t\tlet [ leftBorderGeometry, leftSideGeometry, leftBarrierGeometry ] =\r\n\t\t\t\tgetOuterPartGeometries(i_curveSegment.leftBorder(), i_curveSegment.leftSide(), i_curveSegment.leftBarrier(), \r\n\t\t\t\t!i_curveSegment.isRight);\r\n\t\t\tlet [ rightBorderGeometry, rightSideGeometry, rightBarrierGeometry ] =\r\n\t\t\t\tgetOuterPartGeometries(i_curveSegment.rightBorder(), i_curveSegment.rightSide(), i_curveSegment.rightBarrier(), \r\n\t\t\t\ti_curveSegment.isRight);\r\n\r\n\t\t\tlet partGeometries = [\r\n\t\t\t\tpartGeometry,\r\n\t\t\t\tleftBorderGeometry, leftSideGeometry, leftBarrierGeometry,\r\n\t\t\t\trightBorderGeometry, rightSideGeometry, rightBarrierGeometry,\r\n\t\t\t]\r\n\t\t\t// eslint-disable-next-line no-loop-func\r\n\t\t\tpartGeometries.forEach(g => {\r\n\t\t\t\tg.rotateZ(currentRotation + (i_curveSegment.isRight ? Math.PI/2 : - Math.PI/2));\r\n\t\t\t\tg.translate(centerPosition.x, centerPosition.y, centerPosition.z);\r\n\t\t\t});\r\n\t\t\tgeometries.push(partGeometry);\r\n\t\t\tborderGeometries.push(leftBorderGeometry);\r\n\t\t\tborderGeometries.push(rightBorderGeometry);\r\n\t\t\tsideGeometries.push(leftSideGeometry);\r\n\t\t\tsideGeometries.push(rightSideGeometry);\r\n\t\t\tbarrierGeometries.push(leftBarrierGeometry);\r\n\t\t\tbarrierGeometries.push(rightBarrierGeometry);\r\n\r\n\t\t\tcurrentStartPosition.addVectors(currentStartPosition, partDisplacement.position);\r\n\t\t\tcurrentRotation += partDisplacement.rotation;\r\n\t\t}\r\n\r\n\t\tlet mergedGeometry = new THREE.Geometry();\r\n\t\tgeometries.forEach(g => {\r\n\t\t\tlet mesh = new THREE.Mesh(g);\r\n\t\t\tmesh.updateMatrix();\r\n\t\t\tmergedGeometry.merge(mesh.geometry, mesh.matrix);\r\n\t\t});\r\n\t\t\r\n\t\tlet mergedEdgeGeometry = new THREE.EdgesGeometry(mergedGeometry);\r\n\t\t\r\n\t\tlet trackMesh = new THREE.Mesh(mergedGeometry, trackSegmentMaterial);\r\n\t\tretval.add(trackMesh);\r\n\t\tretval.add(new THREE.LineSegments(mergedEdgeGeometry, new THREE.LineBasicMaterial({ color: 0x4400ff })));\r\n\r\n\t\tlet meshes = [ trackMesh ];\r\n\t\tborderGeometries.forEach(cg => { let mesh = new THREE.Mesh(cg, trackBorderMaterial); meshes.push(mesh); retval.add(mesh); });\r\n\t\tsideGeometries.forEach(sg => { let mesh = new THREE.Mesh(sg, trackSideMaterial); meshes.push(mesh); retval.add(mesh); });\r\n\t\tbarrierGeometries.forEach(bg => { let mesh = new THREE.Mesh(bg, trackBarrierMaterial); meshes.push(mesh); retval.add(mesh); });\r\n\r\n\t\tmeshes.forEach(m => {\r\n\t\t\tm.castShadow = true;\r\n\t\t\tm.receiveShadow = true;\r\n\t\t})\r\n\r\n        //let vnh = new THREE.VertexNormalsHelper( mesh, 10, 0x00ff00, 10 );\r\n\t\t//retval.add( vnh );\r\n\t\t//let fnh = new THREE.FaceNormalsHelper( trackMmesh, 10, 0x00ff00, 10 );\r\n\t\t//retval.add(fnh);\r\n\t\t\r\n\t\tif (i_highlight) {\r\n\t\t\tretval.add(new THREE.Mesh(mergedGeometry, trackSegmentHighlightMaterial));\r\n\t\t\tretval.add(new THREE.LineSegments(mergedEdgeGeometry, new THREE.LineBasicMaterial({ color: 0xdd6600, linewidth: 5 })));\r\n\t\t}\r\n\r\n\t\tretval.userData = i_curveSegment;\r\n\t\treturn retval;\r\n\t}\r\n\r\n\t/*function createText(i_text, i_position) {\r\n\t\tlet geometry = new THREE.TextGeometry(i_text, {\r\n\t\t\tfont: font\r\n\t\t});\r\n\t\tgeometry.position.copy(i_position);\r\n\t\tlet retval = new THREE.Mesh(\r\n\t\t\tgeometry,\r\n\t\t\tnew THREE.MeshStandardMaterial({ color: 0xff0000 })\r\n\t\t);\r\n\t\treturn retval;\r\n\t}*/\r\n\t\r\n\t/*function findCenterPoint(i_geometry) {\r\n\t\tif (!i_geometry instanceof THREE.Geometry) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\tlet retval = new THREE.Vector3();\r\n\t\ti_geometry.vertices.forEach(vertex => {\r\n\t\t\tretval.copy(retval.add(vertex));\r\n\t\t});\r\n\t\tretval.divideScalar(i_geometry.vertices.length);\r\n\r\n\t\treturn retval;\r\n\t}*/\r\n}\r\n","export default class EditorHook {\r\n\tdata = { };\r\n\r\n\tconstructor(i_data) {\r\n\t\tthis.data = i_data;\r\n\t}\r\n}\r\n","import * as THREE from 'three';\r\nimport EditorHook from '../classes/EditorHook';\r\n\r\nexport function InterSegmentHooks () {\r\n\r\n\tconst hookMaterial = new THREE.MeshBasicMaterial({ color: \"#ffff00\", transparent: true, opacity: .4, side: THREE.DoubleSide });\r\n\tconst hookHighlightMaterial = new THREE.MeshBasicMaterial({ color: \"#ff0000\", transparent: true, opacity: .8, side: THREE.DoubleSide });\r\n\tconst hookHoverMaterial = new THREE.MeshBasicMaterial({ color: \"#660000\", transparent: true, opacity: .8, side: THREE.DoubleSide });\r\n\r\n\tfunction buildObjects(i_track, i_positionsToHighlight, i_positionToHighlightHover) {\r\n\t\tlet retval = new THREE.Group();\r\n\t\tretval.add(buildMainTrackInterSegmentHooks(i_track));\r\n\t\tretval.add(buildHighlightedObjects(i_track, i_positionsToHighlight));\r\n\t\tif (i_positionToHighlightHover !== undefined) {\r\n\t\t\tretval.add(buildHighlightedObjects(i_track, [ i_positionToHighlightHover ], hookHoverMaterial));\r\n\t\t}\r\n\t\treturn retval;\r\n\t}\r\n\r\n\tfunction buildHighlightedObjects(i_track, i_positions, i_material) {\r\n\t\tlet retval = new THREE.Group();\r\n\t\t(i_positions || []).forEach(position => { retval.add(createInterSegmentHook(i_track, position, i_material || hookHighlightMaterial)); });\r\n\t\treturn retval;\r\n\t}\r\n\r\n\tfunction buildMainTrackInterSegmentHooks(i_track, i_material) {\r\n\t\tlet retval = new THREE.Group();\r\n\t\tfor (let i = 0; i <= i_track.mainTrack.trackSegments.length; ++i) {\r\n\t\t\tretval.add(createInterSegmentHook(i_track, i, i_material));\r\n\t\t}\r\n\t\treturn retval;\r\n\t}\r\n\r\n\tfunction createInterSegmentHook(i_track, i, i_material) {\r\n\t\tlet attitude = undefined;\r\n\t\tif (i === i_track.mainTrack.trackSegments.length) {\r\n\t\t\tattitude = i_track.computeEndOfSegment(i - 1);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tattitude = i_track.computeStartOfSegment(i);\r\n\t\t}\r\n\r\n\t\tlet retval = new THREE.Group();\r\n\r\n\t\tlet size = 5;\r\n\t\tlet geometry = new THREE.TorusBufferGeometry(size * 1.5, size * .25, 6, 36, Math.PI*2);\r\n\t\tgeometry.rotateX(Math.PI/2);\r\n\t\tgeometry.rotateZ(attitude.rotation + Math.PI/2);\r\n\t\tgeometry.translate(attitude.position.x, attitude.position.y, attitude.position.z);\r\n\t\tretval.add(new THREE.Mesh(geometry, i_material || hookMaterial));\t\t\r\n\r\n\t\tretval.userData = new EditorHook({ interSegmentIndex: i });\r\n\r\n\t\treturn retval;\r\n\t}\r\n\r\n\treturn {\r\n\t\tbuildObjects,\r\n\t\tbuildHighlightedObjects\r\n\t};\r\n}","import * as THREE from 'three';\r\nimport GeneralLights from './GeneralLights';\r\nimport TrackObjects from './TrackObjects';\r\nimport Segment from '../classes/Segment';\r\nimport { InterSegmentHooks } from './EditorObjects';\r\nimport EditorHook from '../classes/EditorHook';\r\n\r\nexport default canvas => {\r\n\r\n    const clock = new THREE.Clock();\r\n    \r\n    var raycaster = new THREE.Raycaster();\r\n    var mouseClickPosition = new THREE.Vector2();\r\n    \r\n    var track = undefined;\r\n    var track3DObject = undefined;\r\n    var selectedSegment = undefined;\r\n    var selectedSegment3DObject = undefined;\r\n    \r\n    var isInHookMode = false;\r\n    var hookObjects = undefined;\r\n    var selectedHooks = [];\r\n    var highlightedHook = undefined;\r\n    \r\n    const screenDimensions = {\r\n        width: canvas.width,\r\n        height: canvas.height\r\n    }\r\n    \r\n    const scene = buildScene();\r\n    const lights = GeneralLights(scene);\r\n    const renderer = buildRender(screenDimensions);\r\n    const sceneSubjects = createSceneSubjects(scene);\r\n    \r\n    const [ orthogonalCamera, perspectiveCamera ] = buildCameras(screenDimensions);\r\n    var camera = orthogonalCamera;\r\n    //var cameraPerspectiveLookAt = undefined;\r\n    //setPerspectiveLookAt(new THREE.Vector3(0, 0, 0));\r\n\r\n    const xyPlane = buildXYPlane();\r\n\r\n    function buildXYPlane() {\r\n        const xyPlaneSize = 100000;\r\n        const xyPlaneGeometry = new THREE.Geometry();\r\n        xyPlaneGeometry.vertices = [\r\n            new THREE.Vector3(-xyPlaneSize, -xyPlaneSize, 0),\r\n            new THREE.Vector3(-xyPlaneSize,  xyPlaneSize, 0),\r\n            new THREE.Vector3( xyPlaneSize,  xyPlaneSize, 0),\r\n            new THREE.Vector3( xyPlaneSize, -xyPlaneSize, 0),\r\n        ];\r\n        xyPlaneGeometry.faces = [\r\n            new THREE.Face3(0, 3, 1),\r\n            new THREE.Face3(2, 1, 3),\r\n        ];\r\n        xyPlaneGeometry.computeFaceNormals();\r\n        return new THREE.Mesh(xyPlaneGeometry);\r\n    }\r\n    \r\n    function buildScene() {\r\n        const scene = new THREE.Scene();\r\n        scene.background = new THREE.Color(\"#ddd\");\r\n\r\n        return scene;\r\n    }\r\n    \r\n    function buildRender({ width, height }) {\r\n        const renderer = new THREE.WebGLRenderer({ canvas: canvas, antialias: true, alpha: true }); \r\n        const DPR = window.devicePixelRatio ? window.devicePixelRatio : 1;\r\n        renderer.setPixelRatio(DPR);\r\n        renderer.setSize(width, height);\r\n\r\n        renderer.gammaInput = true;\r\n        renderer.gammaOutput = true; \r\n\r\n        renderer.shadowMap.enabled = false;\r\n        renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n\r\n        return renderer;\r\n    }\r\n\r\n    function buildCameras({ width, height }) {\r\n        const aspectRatio = width / height;\r\n        let viewRange = 200;\r\n        const orthogonalCamera = new THREE.OrthographicCamera(-viewRange, viewRange, viewRange/aspectRatio, -viewRange/aspectRatio, 10, -10);\r\n\r\n        const fieldOfView = 40;\r\n        const nearPlane = 2;\r\n        const farPlane = 10000; \r\n        const perspectiveCamera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane);\r\n        perspectiveCamera.position.set(0, 0, 50);\r\n\r\n        // DEV\r\n        perspectiveCamera.position.set(450, -160, 45);\r\n        perspectiveCamera.rotation.set(1.0918, 0.7178, 0.2293);\r\n        perspectiveCamera.updateProjectionMatrix();\r\n\r\n        return [ orthogonalCamera, perspectiveCamera ];\r\n    }\r\n\r\n    function createSceneSubjects(scene) {\r\n        const sceneSubjects = [\r\n            lights,\r\n        ];\r\n\r\n        return sceneSubjects;\r\n    }\r\n\r\n    function updateTrack(i_track) {\r\n        if (i_track) {\r\n            track = i_track;\r\n        }\r\n        if (track3DObject) {\r\n            scene.remove(track3DObject);\r\n        }\r\n        track3DObject = TrackObjects(track, selectedSegment);\r\n        scene.add(track3DObject);\r\n\r\n        /*this.sceneSubjects = [\r\n            lights,\r\n            track3DObject\r\n        ];*/\r\n    }\r\n\r\n    function updateSelectedSegment(i_segment) {\r\n        selectedSegment = i_segment;\r\n        //updateTrack();\r\n        if (selectedSegment3DObject) {\r\n            scene.remove(selectedSegment3DObject);\r\n        }\r\n        selectedSegment3DObject = TrackObjects(selectedSegment);\r\n        if (selectedSegment3DObject) {\r\n            scene.add(selectedSegment3DObject);\r\n        }\r\n    }\r\n\r\n    function clearHookMode() {\r\n        isInHookMode = false;\r\n        if (hookObjects) {\r\n            scene.remove(hookObjects);\r\n        }\r\n    }\r\n\r\n    function updateHookMode() {\r\n        clearHookMode();\r\n        isInHookMode = true;\r\n        hookObjects = InterSegmentHooks().buildObjects(track, selectedHooks, highlightedHook);\r\n        scene.add(hookObjects);\r\n    }\r\n\r\n    function enterHookMode() { highlightedHook = undefined; updateHookMode(); }\r\n    function exitHookMode() { clearHookMode(); }\r\n\r\n    function update() {\r\n        const elapsedTime = clock.getElapsedTime();\r\n\r\n        for(let i=0; i<sceneSubjects.length; i++) {\r\n            if (sceneSubjects[i].update) {\r\n                sceneSubjects[i].update(elapsedTime, perspectiveCamera);\r\n            }\r\n        }\r\n\r\n        renderer.render(scene, camera);\r\n    }\r\n\r\n    function onWindowResize() {\r\n        const { width, height } = canvas;\r\n        \r\n        screenDimensions.width = width;\r\n        screenDimensions.height = height;\r\n\r\n        camera.aspect = width / height;\r\n        camera.updateProjectionMatrix();\r\n        \r\n        renderer.setSize(width, height);\r\n    }\r\n\r\n    function onMouseMove(x, y) {\r\n        if (isInHookMode) {\r\n            let hook = pick(x, y, hookObjects, obj => obj instanceof EditorHook);\r\n            if (hook instanceof EditorHook) {\r\n                highlightedHook = hook.data.interSegmentIndex;\r\n            }\r\n            else {\r\n                highlightedHook = undefined;\r\n            }\r\n            updateHookMode();\r\n        }\r\n    }\r\n\r\n    function zoom(i_in) {\r\n        if (camera === orthogonalCamera) {\r\n            const delta = 1.2;\r\n            camera.zoom *= i_in ? delta : 1/delta;\r\n            camera.updateProjectionMatrix();\r\n        }\r\n        else if (camera === perspectiveCamera) {\r\n            camera.translateOnAxis(new THREE.Vector3(0, 0, 1), 20 * (i_in ? -1 : 1));\r\n            camera.updateProjectionMatrix();\r\n        }\r\n    }\r\n\r\n    function moveCamera(i_xDelta, i_yDelta, i_buttons, i_shiftKey) {\r\n        if (camera === orthogonalCamera) {\r\n            let factor = 20 / 7;\r\n            camera.top += i_yDelta / factor / camera.zoom;\r\n            camera.bottom += i_yDelta / factor / camera.zoom;\r\n            camera.left -= i_xDelta / factor / camera.zoom;\r\n            camera.right -= i_xDelta / factor / camera.zoom;\r\n            camera.updateProjectionMatrix();\r\n        }\r\n        else if (camera === perspectiveCamera) {\r\n            const panScaleFactor = 1/2;\r\n            const scaleFactor = 16;\r\n            const leftButton = 1;\r\n            //const rightButton = 2;\r\n            if (i_buttons & leftButton) {\r\n                let delta = new THREE.Vector3(-i_xDelta, i_yDelta, 0);\r\n\r\n                raycaster.setFromCamera({ x: 0, y: 0 }, camera);\r\n                let startIntersects = raycaster.intersectObject(xyPlane);\r\n                let newScreenPoint = { \r\n                    x: (delta.x / renderer.domElement.width),\r\n                    y: (delta.y / renderer.domElement.height)\r\n                    };\r\n                raycaster.setFromCamera(newScreenPoint, camera);\r\n                let endIntersects = raycaster.intersectObject(xyPlane);\r\n                let xyDelta = undefined;\r\n                if (startIntersects.length > 0 && endIntersects.length > 0) {\r\n                    xyDelta = new THREE.Vector3(\r\n                        endIntersects[0].point.x - startIntersects[0].point.x,\r\n                        endIntersects[0].point.y - startIntersects[0].point.y,\r\n                        0\r\n                    );\r\n                }\r\n\r\n                if (!i_shiftKey) {\r\n                    camera.up = new THREE.Vector3(0, 0, 1);\r\n                    if (xyDelta) {\r\n                        camera.position.x += xyDelta.x * camera.zoom / panScaleFactor;\r\n                        camera.position.y += xyDelta.y * camera.zoom / panScaleFactor;\r\n                    }\r\n                }\r\n                else {\r\n                    camera.up = new THREE.Vector3(0, 0, 1);\r\n                    camera.rotateOnAxis(new THREE.Vector3(1, 0, 0), delta.y * Math.PI/180 * camera.zoom / scaleFactor);\r\n                    camera.rotateOnWorldAxis(new THREE.Vector3(0, 0, 1), -delta.x * Math.PI/180 * camera.zoom / scaleFactor);\r\n                }\r\n                camera.updateProjectionMatrix();\r\n            }\r\n        }\r\n    }\r\n\r\n    /*function setPerspectiveLookAt(i_lookAt) {\r\n        cameraPerspectiveLookAt = i_lookAt;\r\n        perspectiveCamera.up = new THREE.Vector3(0, 0.1, 1);\r\n        perspectiveCamera.lookAt(cameraPerspectiveLookAt);\r\n    }*/\r\n\r\n    function pick(i_x, i_y, i_targetObject, i_acceptableObjectCriterion) {\r\n        if (!i_targetObject) {\r\n            return undefined;\r\n        }\r\n\r\n        mouseClickPosition.x = (i_x / renderer.domElement.width) * 2 - 1;\r\n        mouseClickPosition.y = -(i_y / renderer.domElement.height) * 2 + 1;\r\n        raycaster.setFromCamera(mouseClickPosition, camera);\r\n        let intersects = raycaster.intersectObject(i_targetObject, true);\r\n        for (let i = 0; i < intersects.length; ++i) {\r\n            let obj3D = intersects[i].object;\r\n            let obj = obj3D.userData;\r\n            while (!i_acceptableObjectCriterion(obj) && obj3D.parent) {\r\n                obj3D = obj3D.parent;\r\n                obj = obj3D.userData;\r\n            }\r\n            if (i_acceptableObjectCriterion(obj)) {\r\n                return obj;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    function pickTrackSegment(i_x, i_y) {\r\n        let segment = pick(i_x, i_y, track3DObject, obj => obj instanceof Segment);\r\n        updateSelectedSegment(segment);\r\n        return segment;\r\n    }\r\n\r\n    function pickEditorHook(i_x, i_y) {\r\n        if (!isInHookMode) return undefined;\r\n        let pickedHook = pick(i_x, i_y, hookObjects, obj => obj instanceof EditorHook);\r\n        //updateHookMode();\r\n        return pickedHook;\r\n    }\r\n\r\n\tfunction setPerspectiveCamera() {\r\n        camera = perspectiveCamera;\t\t\r\n\t}\r\n\r\n\tfunction setOrthogonalCamera() {\r\n\t\tcamera = orthogonalCamera;\r\n\t}\r\n\r\n    return {\r\n        update,\r\n        onWindowResize,\r\n        onMouseMove,\r\n        updateTrack,\r\n        updateSelectedSegment,\r\n        zoom,\r\n        moveCamera,\r\n        pickTrackSegment,\r\n        pickEditorHook,\r\n        setPerspectiveCamera,\r\n        setOrthogonalCamera,\r\n        enterHookMode,\r\n        exitHookMode,\r\n        updateHookMode,\r\n    }\r\n}\r\n","import * as THREE from 'three'\r\n\r\nexport default scene => {    \r\n\r\n    const ambientLight = new THREE.AmbientLight('#333');\r\n    //const hemisphereLight = new THREE.HemisphereLight(0x0000ff, 0x44ff22, 0.6);\r\n\r\n    const sunLight = new THREE.DirectionalLight(\"#fff\", 1);\r\n    sunLight.position.set(-1, .75, 1).normalize();\r\n    sunLight.position.multiplyScalar(50);\r\n    sunLight.castShadow = true;\r\n    sunLight.shadow.mapSize.width = sunLight.shadow.mapSize.height = 1024*4;\r\n    const d = 1000;\r\n    sunLight.shadow.camera.left = -d;\r\n    sunLight.shadow.camera.right = d;\r\n    sunLight.shadow.camera.top = d;\r\n    sunLight.shadow.camera.bottom = -d;\r\n    sunLight.shadow.camera.near = 1;\r\n    sunLight.shadow.camera.far = 1000;\r\n    sunLight.shadow.bias = 0.0001;\r\n    sunLight.shadow.radius = 2;\r\n    //sunLight.shadowDarkness = .35;\r\n    //const lightIn = new THREE.PointLight(\"#4CAF50\", 10);\r\n    //const lightOut = new THREE.PointLight(\"#2196F3\", 10);\r\n    //lightOut.position.set(40,20,40);\r\n\r\n    scene.add(ambientLight);\r\n    //scene.add(hemisphereLight);\r\n    scene.add(sunLight);\r\n    //scene.add(lightIn);\r\n    //scene.add(lightOut);\r\n\r\n    const testLight = new THREE.SpotLight(0xff0000, 1, 500, Math.PI/2, .1, 2);\r\n    testLight.position.set(350, 0, 10);\r\n    testLight.rotation.set(60, 30, 0);\r\n    //scene.add(testLight);\r\n\r\n    //const rad = 80;\r\n\r\n    function update(time) {\r\n        //const x = rad * Math.sin(time*0.2)\r\n        //lightOut.position.x = x;\r\n    }\r\n\r\n    return {\r\n        update\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport threeEntryPoint from '../threejs/threeEntryPoint';\r\nimport { SpeedDial, SpeedDialIcon, SpeedDialAction } from \"@material-ui/lab\";\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nimport iconStraight from '../assets/icons/straight.svg';\r\nimport iconCurveRight from '../assets/icons/curve-right.svg';\r\nimport iconCurveLeft from '../assets/icons/curve-left.svg';\r\nimport Segment from \"../classes/Segment\";\r\nimport EditorHook from \"../classes/EditorHook\";\r\nimport Straight from \"../classes/Straight\";\r\nimport Curve from \"../classes/Curve\";\r\n\r\n\r\nconst styles = theme => ({\r\n\troot: {\r\n\t},\r\n\tviewer: {\r\n\t\twidth: '100%',\r\n\t\theight: '100%'\r\n\t},\r\n\tspeedDial: {\r\n\t  position: 'absolute',\r\n\t  bottom: theme.spacing.unit * 2,\r\n\t  right: theme.spacing.unit * 3,\r\n\t},\r\n\tspeedDialIcon: {\r\n\t\tmaxWidth: 16,\r\n\t\tmaxHeight: 16\r\n\t}\r\n  });\r\n\r\nconst addSegmentActions = [\r\n\t{ action: 'addStraight', name: 'Add straight', icon: iconStraight },\r\n\t{ action: 'addCurveRight', name: 'Add curve right', icon: iconCurveRight },\r\n\t{ action: 'addCurveLeft', name: 'Add curve left', icon: iconCurveLeft }\r\n];\r\n\r\nclass TrackViewer extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { \r\n\t\t\t//track: props.track,\r\n\t\t\tperspective: true,\r\n\t\t\tmouseLeftDown: false,\r\n\t\t\tmouseLeftDragging: false,\r\n\t\t\tmouseLeftJustDragged: false,\r\n\t\t\tmouseLeftDownLastPositionX: undefined,\r\n\t\t\tmouseLeftDownLastPositionY: undefined,\r\n\t\t\taddSegmentSpeedDialOpen: false\r\n\t\t}; \r\n\t\tthis.m_currentPickingPromise = undefined;\r\n\t}\t\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.three = threeEntryPoint(this.threeRootElement);\r\n\t\tthis.state.perspective \r\n\t\t\t? this.three.setPerspectiveCamera()\r\n\t\t\t: this.three.setOrthogonalCamera();\r\n\t}\t\t\r\n\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\t\tif (nextProps.track !== this.props.track\r\n\t\t\t|| nextProps.selectedSegment !== this.props.selectedSegment) {\r\n\t\t\treturn true;\r\n\t\t}\t\r\n\r\n\t\tif (nextState.perspective !== this.state.perspective) {\r\n\t\t\treturn true;\r\n\t\t}\t\r\n\r\n\t\tif (!nextProps.mouseLeftDragging && nextProps.mouseLeftDragging === this.state.mouseLeftDragging) {\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\r\n\t\treturn true;\r\n\t}\t\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tif (prevProps.track !== this.props.track) {\r\n\t\t\tthis.three.updateTrack(this.props.track);\r\n\t\t}\t\r\n\r\n\t\tif (prevProps.selectedSegment !== this.props.selectedSegment) {\r\n\t\t\tthis.three.sceneManager.updateSelectedSegment(this.props.selectedSegment);\r\n\t\t}\t\r\n\r\n\t\tif (prevState.perspective !== this.state.perspective) {\r\n\t\t\tthis.state.perspective ? this.three.setPerspectiveCamera() : this.three.setOrthogonalCamera();\r\n\t\t}\t\r\n\t}\t\r\n\r\n\tmouseWheel(e) {\r\n\t\tthis.three.zoom(e.deltaY < 0);\r\n\t}\t\r\n\r\n\tmouseDown(e) {\r\n\t\tif (e.button === 0)\r\n\t\t{\r\n\t\t\tthis.setState({ mouseLeftDown: true, mouseLeftDragging: false, mouseLeftJustDragged: false,\r\n\t\t\t\tmouseLeftDownLastPositionX: e.screenX, mouseLeftDownLastPositionY: e.screenY });\r\n\t\t}\t\t\r\n\t}\t\r\n\r\n\tmouseUp(e) {\r\n\t\tif (e.button === 0)\r\n\t\t{\r\n\t\t\tthis.setState({ mouseLeftDown: false, mouseLeftJustDragged: this.state.mouseLeftDragging, mouseLeftDragging: false, \r\n\t\t\t\tmouseLeftDownLastPositionX: undefined, mouseLeftDownLastPositionY: undefined });\r\n\t\t}\t\t\r\n\t}\t\r\n\r\n\tmouseMove(e) {\r\n\t\tif (this.state.mouseLeftDown)\r\n\t\t{\r\n\t\t\tlet xDistance = e.screenX - this.state.mouseLeftDownLastPositionX;\r\n\t\t\tlet yDistance = e.screenY - this.state.mouseLeftDownLastPositionY;\r\n\t\t\tif (this.state.mouseLeftDragging || (Math.abs(xDistance) + Math.abs(yDistance) > 2)) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tmouseLeftDragging: true, \r\n\t\t\t\t\tmouseLeftDownLastPositionX: e.screenX, mouseLeftDownLastPositionY: e.screenY\r\n\t\t\t\t})\t\r\n\t\t\t}\t\r\n\r\n\t\t\tif (this.state.mouseLeftDragging) {\r\n\t\t\t\tthis.three.moveCamera(xDistance, yDistance, e.buttons, e.shiftKey);\r\n\t\t\t}\t\r\n\t\t}\r\n\r\n\t\tlet pickX = e.clientX - this.threeRootElement.offsetLeft;\r\n\t\tlet pickY = e.clientY - this.threeRootElement.offsetTop;\r\n\t\tthis.three.sceneManager.onMouseMove(pickX, pickY);\r\n\t}\t\r\n\r\n\tclick(e) {\r\n\t\tif (e.button === 0) {\r\n\t\t\tif (this.state.mouseLeftJustDragged) {\r\n\t\t\t\tthis.setState({ mouseLeftJustDragged: false });\r\n\t\t\t\treturn;\r\n\t\t\t}\t\r\n\r\n\t\t\tlet pickX = e.clientX - this.threeRootElement.offsetLeft;\r\n\t\t\tlet pickY = e.clientY - this.threeRootElement.offsetTop;\r\n\r\n\t\t\tlet pickedObject = this.three.sceneManager.pickTrackSegment(pickX, pickY);\r\n\t\t\tlet pickedHook = this.three.sceneManager.pickEditorHook(pickX, pickY);\r\n\t\t\t\r\n\t\t\tif (pickedHook instanceof EditorHook) {\r\n\t\t\t\tthis.m_currentPickingPromiseFunction(pickedHook);\r\n\t\t\t}\r\n\t\t\telse if (pickedObject instanceof Segment) {\r\n\t\t\t\tthis.props.onSegmentSelected(pickedObject);\r\n\t\t\t}\r\n\t\t\telse if (!pickedObject) {\r\n\t\t\t\tif (this.props.selectedSegment) {\r\n\t\t\t\t\tthis.props.onSegmentSelected(undefined);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\t\r\n\t}\t\r\n\r\n\tkeyDown(e) {\r\n\t\tswitch (e.key) {\r\n\t\tcase 'o':\t\r\n\t\t\tthis.setOrthographicView();\r\n\t\t\tbreak;\r\n\t\tcase 'p':\t\r\n\t\t\tthis.setPerspectiveView();\r\n\t\t\tbreak;\r\n\t\tdefault:\t\r\n\t\t\tbreak;\r\n\t\t}\t\r\n\t}\t\r\n\t\r\n\tsetOrthographicView() {\r\n\t\tthis.setState({perspective: false});\r\n\t}\t\r\n\r\n\tsetPerspectiveView() {\r\n\t\tthis.setState({perspective: true});\r\n\t}\t\r\n\r\n\taddSegmentSpeedDialHandleClick(e) {\r\n\t\tthis.setState(state => ({ addSegmentSpeedDialOpen: !state.addSegmentSpeedDialOpen }));\r\n\t}\r\n\r\n\tactionHandler(i_action) {\r\n\t\tswitch (i_action) {\r\n\t\tcase 'addStraight': \r\n\t\tcase 'addCurveRight': \r\n\t\tcase 'addCurveLeft': \r\n\t\t\treturn (e) => {\r\n\t\t\t\tif (this.props.track.mainTrack.trackSegments.length === 0) {\r\n\t\t\t\t\tthis.handlePickHookAction(i_action, { data: { interSegmentIndex: 0 }});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.pickHook(i_action);\r\n\t\t\t\t}\r\n\t\t\t\tthis.addSegmentSpeedDialHandleClick();\r\n\t\t\t};\r\n\t\tdefault: \r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\thandlePickHookAction(i_action, i_pickResult) {\r\n\t\tswitch (i_action) {\r\n\t\tcase 'addStraight': \r\n\t\tcase 'addCurveRight': \r\n\t\tcase 'addCurveLeft': \r\n\t\t\tlet segmentToAdd = undefined;\r\n\t\t\tswitch (i_action) {\r\n\t\t\t\tcase 'addStraight': segmentToAdd = new Straight(this.props.track.mainTrack); break;\r\n\t\t\t\tcase 'addCurveRight': segmentToAdd = new Curve(this.props.track.mainTrack); segmentToAdd.isRight = true; break;\r\n\t\t\t\tcase 'addCurveLeft': segmentToAdd = new Curve(this.props.track.mainTrack); segmentToAdd.isRight = false; break;\r\n\t\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t\tlet hookIndex = i_pickResult.data.interSegmentIndex;\r\n\t\t\tthis.props.onSegmentAdded(segmentToAdd, hookIndex);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tpickHook(i_action) {\r\n\t\tthis.three.enterHookMode();\r\n\t\tthis.m_currentPickingPromise = new Promise(resolve => this.m_currentPickingPromiseFunction = resolve);\r\n\t\tthis.m_currentPickingPromise.then(value => {\r\n\t\t\tthis.handlePickHookAction(i_action, value);\r\n\t\t\tthis.three.exitHookMode();\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={this.props.className}>\r\n\t\t\t\t<div ref={element => this.threeRootElement = element} className={classes.viewer}\r\n\t\t\t\t\tonWheel={(e) => this.mouseWheel(e)} \r\n\t\t\t\t\tonMouseDown={(e) => this.mouseDown(e)} onMouseUp={(e) => this.mouseUp(e)} onMouseMove={(e) => this.mouseMove(e)}\r\n\t\t\t\t\ttabIndex={0} onKeyDown={(e) => this.keyDown(e)}\r\n\t\t\t\t\tonClick={(e) => this.click(e)}\r\n\t\t\t\t></div>\r\n\t\t\t\t<SpeedDial\r\n\t\t\t\t\tariaLabel=\"Add segment\"\r\n\t\t\t\t\tclassName={classes.speedDial}\r\n\t\t\t\t\ticon={<SpeedDialIcon />}\r\n\t\t\t\t\topen={this.state.addSegmentSpeedDialOpen}\r\n\t\t\t\t\tonClick={e => this.addSegmentSpeedDialHandleClick(e)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t{addSegmentActions.map(action => (\r\n\t\t\t\t\t\t<SpeedDialAction \r\n\t\t\t\t\t\t\tkey={action.name}\r\n\t\t\t\t\t\t\ticon={ <img src={action.icon} alt={action.name} className={classes.speedDialIcon} /> }\r\n\t\t\t\t\t\t\ttooltipTitle={action.name}\r\n\t\t\t\t\t\t\tonClick={e => this.actionHandler(action.action)(e) }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</SpeedDial>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles)(TrackViewer);\r\n","import SceneManager from \"./SceneManager\";\r\n\r\nexport default containerElement => {\r\n\tconst canvas = createCanvas(document, containerElement);\r\n\tconst sceneManager = SceneManager(canvas);\r\n\r\n\tbindEventListeners();\r\n\trender();\r\n\r\n\tfunction createCanvas(document, containerElement) {\r\n\t\tconst canvas = document.createElement('canvas');\r\n\t\tcontainerElement.appendChild(canvas);\r\n\t\treturn canvas;\r\n\t}\r\n\r\n\tfunction bindEventListeners() {\r\n\t\twindow.onresize = resizeCanvas;\r\n\t\tresizeCanvas();\r\n\t}\r\n\r\n\tfunction resizeCanvas() {\r\n\t\tcanvas.style.width = '100%';\r\n\t\tcanvas.style.height= '100%';\r\n\t\tcanvas.width = canvas.offsetWidth;\r\n\t\tcanvas.height = canvas.offsetHeight;\r\n\t\tsceneManager.onWindowResize();\r\n\t}\r\n\t\r\n\tfunction render(time) {\r\n\t\trequestAnimationFrame(render);\r\n\t\tsceneManager.update();\r\n\t}\r\n\r\n\tfunction updateTrack(i_track) {\r\n\t\tsceneManager.updateTrack(i_track);\r\n\t}\r\n\r\n\tfunction zoom(i_in) {\r\n\t\tsceneManager.zoom(i_in);\r\n\t}\r\n\r\n\tfunction moveCamera(i_xDelta, i_yDelta, i_buttons, i_shiftKey) {\r\n\t\tsceneManager.moveCamera(i_xDelta, i_yDelta, i_buttons, i_shiftKey);\r\n\t}\r\n\r\n\tfunction setPerspectiveCamera() {\r\n\t\tsceneManager.setPerspectiveCamera();\r\n\t}\r\n\r\n\tfunction setOrthogonalCamera() {\r\n\t\tsceneManager.setOrthogonalCamera();\r\n\t}\r\n\r\n\tfunction enterHookMode() {\r\n\t\tsceneManager.enterHookMode();\r\n\t}\r\n\r\n\tfunction exitHookMode() {\r\n\t\tsceneManager.exitHookMode();\r\n\t}\r\n\r\n\tfunction updateHookMode() {\r\n\t\tsceneManager.updateHookMode();\r\n\t}\r\n\r\n\treturn {\r\n\t\tupdateTrack,\r\n\t\tzoom,\r\n\t\tmoveCamera,\r\n\t\tsetPerspectiveCamera,\r\n\t\tsetOrthogonalCamera,\r\n        enterHookMode,\r\n        exitHookMode,\r\n\t\tupdateHookMode,\r\n\t\t\r\n\t\tsceneManager\r\n\t}\r\n}","import { withStyles, TextField } from \"@material-ui/core\";\r\nimport { Slider } from \"@material-ui/lab\";\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst styles = {\r\n\troot: {\r\n\t\tdisplay: 'flex'\r\n\t},\r\n\ttextbox: {\r\n\t\tflexGrow: 0,\r\n\t\tflexBasis: '5em',\r\n\t\tmarginRight: '1em'\r\n\t},\r\n\tslider: {\r\n\t\tpadding: '22px 0px',\r\n\t\tflexGrow: 1\r\n    },\r\n};\r\n\r\nclass ValueSlidingEditor extends Component {\r\n\tonChange(event, value) {\r\n\t\tthis.props.onChange(Number.parseFloat(value || event.target.value));\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { classes, value, min, max, step } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<TextField classes={{ root: classes.textbox }}\r\n\t\t\t\t\tvalue={value} onChange={(e, v) => this.onChange(e, v)} />\r\n\t\t\t\t<Slider aria-labelledby=\"lblLength\" classes={{ container: classes.slider }}\r\n\t\t\t\t\tvalue={value} min={min} max={max} step={step}\r\n\t\t\t\t\tonChange={(e, v) => this.onChange(e, v)} \r\n\t\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nValueSlidingEditor.propTypes = {\r\n\tvalue: PropTypes.number,\r\n\tmin: PropTypes.number,\r\n\tmax: PropTypes.number,\r\n\tstep: PropTypes.number,\r\n\tonChange: PropTypes.func.isRequired\r\n};\r\n\r\nValueSlidingEditor.defaultProps = {\r\n\tvalue: 50,\r\n\tmin: 0,\r\n\tmax: 100,\r\n\tstep: 1\r\n};\r\n\r\nexport default withStyles(styles)(ValueSlidingEditor);\r\n","import React, { Component } from \"react\";\r\nimport { Typography, withStyles } from \"@material-ui/core\";\r\nimport ValueSlidingEditor from \"./ValueSlidingEditor\";\r\n\r\nconst styles = {\r\n};\r\n  \r\nclass StraightEditor extends Component {\r\n\thandleChange = (field) => (value) => {\r\n\t\tconst segment = this.props.segment;\r\n\t\tsegment[field] = value;\r\n\t\tthis.props.onSegmentUpdated(segment);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst segment = this.props.segment;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Typography id=\"lblLength\">Length</Typography>\r\n\t\t\t\t\t<ValueSlidingEditor value={segment.length} min={0} max={500} step={0.1} onChange={v => this.handleChange('length')(v)} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles)(StraightEditor);\r\n","import React, { Component } from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport ValueSlidingEditor from \"./ValueSlidingEditor\";\r\n\r\nexport default class CurveEditor extends Component {\r\n\thandleChange = (field) => (value) => {\r\n\t\tconst segment = this.props.segment;\r\n\t\tsegment.setValue(field, value);\r\n\t\tthis.props.onSegmentUpdated(segment);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst segment = this.props.segment;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Typography id=\"lblArc\">Arc</Typography>\r\n\t\t\t\t\t<ValueSlidingEditor value={segment.arc} min={0} max={360} step={0.1} \r\n\t\t\t\t\t\tonChange={v => this.handleChange('arc')(v)} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Typography id=\"lblStartRadius\">Start radius</Typography>\r\n\t\t\t\t\t<ValueSlidingEditor value={segment.startRadius} min={segment.startWidth/2} max={1000} step={0.1} \r\n\t\t\t\t\t\tonChange={v => this.handleChange('startRadius')(v)} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Typography id=\"lblEndRadius\">End radius</Typography>\r\n\t\t\t\t\t<ValueSlidingEditor value={segment.endRadius} min={segment.startWidth/2} max={1000} step={0.1} \r\n\t\t\t\t\t\tonChange={v => this.handleChange('endRadius')(v)} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { withStyles, Typography } from '@material-ui/core';\r\nimport ValueSlidingEditor from './ValueSlidingEditor';\r\n\r\nconst styles = theme => ({\r\n});\r\n\r\nclass SegmentBorderEditor extends Component {\r\n\thandleChange = (field) => (value) => {\r\n\t\tconst border = this.props.border;\r\n\t\tborder[field] = value;\r\n\t\tthis.props.onBorderUpdated(border);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { classes, className } = this.props;\r\n\t\tconst { border } = this.props;\r\n\t\treturn (\r\n\t\t\t<div className={classNames({ [classes.root]: true, [className]: className})}>\t\t\t\t\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Typography>Width</Typography>\r\n\t\t\t\t\t<ValueSlidingEditor value={border.width} min={0} max={50} step={0.1} onChange={v => this.handleChange('width')(v)} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Typography>Height</Typography>\r\n\t\t\t\t\t<ValueSlidingEditor value={border.height} min={0} max={50} step={0.1} onChange={v => this.handleChange('height')(v)} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default withStyles(styles)(SegmentBorderEditor);\r\n","import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { withStyles, Typography, FormControlLabel, Switch } from '@material-ui/core';\r\nimport ValueSlidingEditor from './ValueSlidingEditor';\r\n\r\nconst styles = theme => ({\r\n});\r\n\r\nclass SegmentSideEditor extends Component {\r\n\tstate = {\r\n\t\tisWidthFixed: false,\r\n\t}\r\n\r\n\thandleChange = (field) => (value) => {\r\n\t\tconst side = this.props.side;\r\n\t\tside[field] = value;\r\n\t\tif (this.state.isWidthFixed && (field === 'endWidth' || field === 'startWidth')) {\r\n\t\t\tside.endWidth = side.startWidth;\r\n\t\t}\r\n\t\tthis.props.onSideUpdated(side);\r\n\t}\r\n\r\n\thandleFixedWidthChange(e) {\r\n\t\tthis.setState({ isWidthFixed: e.target.checked });\r\n\t\tthis.props.side.endWidth = this.props.side.startWidth;\r\n\t\tthis.props.onSideUpdated(this.props.side);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { classes, className } = this.props;\r\n\t\tconst { side } = this.props;\r\n\t\treturn (\r\n\t\t\t<div className={classNames({ [classes.root]: true, [className]: className})}>\t\t\t\t\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Typography>Start width</Typography>\r\n\t\t\t\t\t<ValueSlidingEditor value={side.startWidth} min={0} max={50} step={0.1} onChange={v => this.handleChange('startWidth')(v)} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Typography>End width</Typography>\r\n\t\t\t\t\t<FormControlLabel \r\n\t\t\t\t\t\tcontrol={<Switch checked={this.state.isWidthFixed} onChange={e => this.handleFixedWidthChange(e)}/>}\r\n\t\t\t\t\t\tlabel=\"Same width from start to end\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t<ValueSlidingEditor value={side.endWidth} min={0} max={50} step={0.1} onChange={v => this.handleChange('endWidth')(v)} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default withStyles(styles)(SegmentSideEditor);\r\n","import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { withStyles, Typography } from '@material-ui/core';\r\nimport ValueSlidingEditor from './ValueSlidingEditor';\r\n\r\nconst styles = theme => ({\r\n});\r\n\r\nclass SegmentBarrierEditor extends Component {\r\n\thandleChange = (field) => (value) => {\r\n\t\tconst barrier = this.props.barrier;\r\n\t\tbarrier[field] = value;\r\n\t\tthis.props.onBarrierUpdated(barrier);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { classes, className } = this.props;\r\n\t\tconst { barrier } = this.props;\r\n\t\treturn (\r\n\t\t\t<div className={classNames({ [classes.root]: true, [className]: className})}>\t\t\t\t\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Typography>Width</Typography>\r\n\t\t\t\t\t<ValueSlidingEditor value={barrier.width} min={0} max={50} step={0.1} onChange={v => this.handleChange('width')(v)} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Typography>Height</Typography>\r\n\t\t\t\t\t<ValueSlidingEditor value={barrier.height} min={0} max={50} step={0.1} onChange={v => this.handleChange('height')(v)} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default withStyles(styles)(SegmentBarrierEditor);\r\n","import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { withStyles, Tabs, Tab, Typography } from '@material-ui/core';\r\n\r\n//// eslint-disable-next-line import/no-webpack-loader-syntax\r\n//import IconLeftBarrier from 'svg-react-loader!../assets/icons/left-barrier.svg';\r\n//// eslint-disable-next-line import/no-webpack-loader-syntax\r\n//import IconLeftSide from 'svg-react-loader!../assets/icons/left-barrier.svg';\r\n//// eslint-disable-next-line import/no-webpack-loader-syntax\r\n//import IconLeftBorder from 'svg-react-loader!../assets/icons/left-barrier.svg';\r\n//// eslint-disable-next-line import/no-webpack-loader-syntax\r\n//import IconSegment from 'svg-react-loader!../assets/icons/segment.svg';\r\n//// eslint-disable-next-line import/no-webpack-loader-syntax\r\n//import IconRightBorder from 'svg-react-loader!../assets/icons/right-barrier.svg';\r\n//// eslint-disable-next-line import/no-webpack-loader-syntax\r\n//import IconRightSide from 'svg-react-loader!../assets/icons/right-barrier.svg';\r\n//// eslint-disable-next-line import/no-webpack-loader-syntax\r\n//import IconRightBarrier from 'svg-react-loader!../assets/icons/right-barrier.svg';\r\n\r\nimport iconLeftBarrier from '../assets/icons/left-barrier.svg';\r\nimport iconLeftSide from '../assets/icons/left-side.svg';\r\nimport iconLeftBorder from '../assets/icons/left-border.svg';\r\n//import iconSegment from '../assets/icons/segment.svg';\r\nimport iconRightBorder from '../assets/icons/right-border.svg';\r\nimport iconRightSide from '../assets/icons/right-side.svg';\r\nimport iconRightBarrier from '../assets/icons/right-barrier.svg';\r\nimport SegmentBorderEditor from './SegmentBorderEditor';\r\nimport SegmentSideEditor from './SegmentSideEditor';\r\nimport SegmentBarrierEditor from './SegmentBarrierEditor';\r\n\r\nconst styles = theme => ({\r\n\ttab: {\r\n\t\tflex: [[0, 0, 100/6 + '%']],\r\n\t\tminWidth: 0,\r\n\t\t'& img': {\r\n\t\t\tmaxWidth: '100%',\r\n\t\t\tmaxHeight: '100%'\r\n\t\t},\r\n\t},\r\n\tlabelContainer: {\r\n\t\tpaddingLeft: '.5em',\r\n\t\tpaddingRight: '.5em',\r\n\t}\r\n});\r\n\r\nclass SegmentOuterPartsEditor extends Component {\r\n\tstate = {\r\n\t\tvalue: false\r\n\t};\r\n\r\n\thandleChange(e, value) {\r\n\t\tthis.setState({ value: value });\r\n\t}\r\n\r\n\thandleBorderUpdate(i_border, i_isRight) {\r\n\t\tif (i_isRight) {\r\n\t\t\tthis.props.segment.setRightBorder(i_border);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.props.segment.setLeftBorder(i_border);\r\n\t\t}\r\n\t\tthis.props.onSegmentUpdated(this.props.segment);\r\n\t}\r\n\r\n\thandleSideUpdate(i_side, i_isRight) {\r\n\t\tif (i_isRight) {\r\n\t\t\tthis.props.segment.setRightSide(i_side);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.props.segment.setLeftSide(i_side);\r\n\t\t}\r\n\t\tthis.props.onSegmentUpdated(this.props.segment);\r\n\t}\r\n\r\n\thandleBarrierUpdate(i_barrier, i_isRight) {\r\n\t\tif (i_isRight) {\r\n\t\t\tthis.props.segment.setRightBarrier(i_barrier);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.props.segment.setLeftBarrier(i_barrier);\r\n\t\t}\r\n\t\tthis.props.onSegmentUpdated(this.props.segment);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { classes, className } = this.props;\r\n\t\tconst { segment } = this.props;\r\n\t\tlet createImgTag = (i_src) => <img src={i_src} alt=\"Icon\" />\r\n\t\treturn (\r\n\t\t\t<div className={classNames({ [classes.root]: true, [className]: className})}>\r\n\t\t\t\t<Tabs value={this.state.value} onChange={(e, value) => this.handleChange(e, value)} fullWidth={true}>\r\n\t\t\t\t\t<Tab className={classes.tab} classes={{ labelContainer: classes.labelContainer }} value=\"LB\" icon={createImgTag(iconLeftBarrier)} />\r\n\t\t\t\t\t<Tab className={classes.tab} classes={{ labelContainer: classes.labelContainer }} value=\"LS\" icon={createImgTag(iconLeftSide)} />\r\n\t\t\t\t\t<Tab className={classes.tab} classes={{ labelContainer: classes.labelContainer }} value=\"LC\" icon={createImgTag(iconLeftBorder)} />\r\n\t\t\t\t\t<Tab className={classes.tab} classes={{ labelContainer: classes.labelContainer }} value=\"RC\" icon={createImgTag(iconRightBorder)} />\r\n\t\t\t\t\t<Tab className={classes.tab} classes={{ labelContainer: classes.labelContainer }} value=\"RS\" icon={createImgTag(iconRightSide)} />\r\n\t\t\t\t\t<Tab className={classes.tab} classes={{ labelContainer: classes.labelContainer }} value=\"RB\" icon={createImgTag(iconRightBarrier)} />\r\n\t\t\t\t</Tabs>\r\n\t\t\t\t{this.state.value === 'LC' && <div>\r\n\t\t\t\t\t<Typography variant=\"h6\">Left Border</Typography>\r\n\t\t\t\t\t<SegmentBorderEditor border={segment.leftBorder()} onBorderUpdated={e => this.handleBorderUpdate(e, false)} />\r\n\t\t\t\t</div>}\r\n\t\t\t\t{this.state.value === 'RC' && <div>\r\n\t\t\t\t\t<Typography variant=\"h6\">Right Border</Typography>\r\n\t\t\t\t\t<SegmentBorderEditor border={segment.rightBorder()} onBorderUpdated={e => this.handleBorderUpdate(e, true)} />\r\n\t\t\t\t</div>}\r\n\t\t\t\t{this.state.value === 'LS' && <div>\r\n\t\t\t\t\t<Typography variant=\"h6\">Left Side</Typography>\r\n\t\t\t\t\t<SegmentSideEditor side={segment.leftSide()} onSideUpdated={e => this.handleSideUpdate(e, false)} />\r\n\t\t\t\t</div>}\r\n\t\t\t\t{this.state.value === 'RS' && <div>\r\n\t\t\t\t\t<Typography variant=\"h6\">Right Side</Typography>\r\n\t\t\t\t\t<SegmentSideEditor side={segment.rightSide()} onSideUpdated={e => this.handleSideUpdate(e, true)} />\r\n\t\t\t\t</div>}\r\n\t\t\t\t{this.state.value === 'LB' && <div>\r\n\t\t\t\t\t<Typography variant=\"h6\">Left Barrier</Typography>\r\n\t\t\t\t\t<SegmentBarrierEditor barrier={segment.leftBarrier()} onBarrierUpdated={e => this.handleBarrierUpdate(e, false)} />\r\n\t\t\t\t</div>}\r\n\t\t\t\t{this.state.value === 'RB' && <div>\r\n\t\t\t\t\t<Typography variant=\"h6\">Right Barrier</Typography>\r\n\t\t\t\t\t<SegmentBarrierEditor barrier={segment.rightBarrier()} onBarrierUpdated={e => this.handleBarrierUpdate(e, true)} />\r\n\t\t\t\t</div>}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default withStyles(styles)(SegmentOuterPartsEditor);\r\n","import React, { Component } from \"react\";\r\nimport { Card, CardContent, CardHeader, Avatar } from \"@material-ui/core\";\r\nimport Straight from \"../classes/Straight\";\r\nimport Curve from \"../classes/Curve\";\r\n\r\nimport iconStraight from '../assets/icons/straight.svg';\r\nimport iconCurveRight from '../assets/icons/curve-right.svg';\r\nimport iconCurveLeft from '../assets/icons/curve-left.svg';\r\nimport StraightEditor from \"./StraightEditor\";\r\nimport CurveEditor from \"./CurveEditor\";\r\nimport SegmentOuterPartsEditor from \"./SegmentOuterPartsEditor\";\r\n\r\nexport default class SegmentEditor extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t};\r\n\t}\r\n\r\n\thandleSegmentUpdated(segment) {\r\n\t\tthis.props.onSegmentUpdated(segment);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst segment = this.props.segment;\r\n\t\tif (!segment) {\r\n\t\t\treturn (<div></div>);\r\n\t\t}\r\n\t\tconst segmentName = (segment && segment.name) || '';\r\n\t\tlet segmentType = 'Unknown type';\r\n\t\tlet segmentIcon = '';\r\n\t\tlet segmentProperties = undefined;\r\n\t\tif (segment instanceof Straight) {\r\n\t\t\tsegmentType = 'Straight';\r\n\t\t\tsegmentIcon = iconStraight;\r\n\t\t\tsegmentProperties = <StraightEditor segment={this.props.segment}\r\n\t\t\t\tonSegmentUpdated={(s) => this.handleSegmentUpdated(s)}\r\n\t\t\t\t/>;\r\n\t\t}\r\n\t\telse if (segment instanceof Curve) {\r\n\t\t\tsegmentType = segment.isRight ? 'Right curve' : 'Left curve';\r\n\t\t\tsegmentIcon = segment.isRight ? iconCurveRight : iconCurveLeft;\r\n\t\t\tsegmentProperties = <CurveEditor segment={this.props.segment}\r\n\t\t\t\tonSegmentUpdated={(s) => this.handleSegmentUpdated(s)}\r\n\t\t\t\t/>;\r\n\t\t}\r\n\t\tconst segmentLength = this.props.segment.getLength();\r\n\t\treturn (\r\n\t\t\t<Card>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<CardHeader\r\n\t\t\t\t\t\ttitle={segmentName}\r\n\t\t\t\t\t\tsubheader={segmentType + ' - ' + segmentLength.toFixed(2) + ' m'}\r\n\t\t\t\t\t\tavatar={\r\n\t\t\t\t\t\t\t<Avatar aria-label={segmentType}>\r\n\t\t\t\t\t\t\t\t<img src={segmentIcon} alt={segmentType} height=\"18px\" />\r\n\t\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t{segmentProperties}\r\n\t\t\t\t\t<SegmentOuterPartsEditor segment={this.props.segment} \r\n\t\t\t\t\t\tonSegmentUpdated={(s) => this.handleSegmentUpdated(s)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t</CardContent>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { ExpansionPanel, ExpansionPanelSummary, Typography, ExpansionPanelDetails, } from \"@material-ui/core\";\r\nimport SegmentEditor from \"./SegmentEditor\";\r\n\r\nexport default class MainTrackEditor extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\t\t\t\r\n\t\t};\r\n\t}\r\n\r\n\thandleSegmentUpdated(segment) {\r\n\t\tthis.props.onSegmentUpdated(segment);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst mainTrack = this.props.mainTrack;\r\n\t\tconst totalDelta = mainTrack.track.getTotalDelta();\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<ExpansionPanel defaultExpanded={false}>\r\n\t\t\t\t\t<ExpansionPanelSummary>\r\n\t\t\t\t\t\t<Typography variant=\"h6\">Main Track</Typography>\r\n\t\t\t\t\t</ExpansionPanelSummary>\r\n\t\t\t\t\t<ExpansionPanelDetails style={{ flexDirection: 'column' }}>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">{mainTrack.trackSegments.length} segments in the MainTrack</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">Total length: {mainTrack.track.getTotalLength().toFixed(2)} m</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">Total delta:</Typography>\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t<li><Typography variant=\"body2\">X: {totalDelta.position.x.toFixed(3)} m</Typography></li>\r\n\t\t\t\t\t\t\t\t<li><Typography variant=\"body2\">Y: {totalDelta.position.y.toFixed(3)} m</Typography></li>\r\n\t\t\t\t\t\t\t\t<li><Typography variant=\"body2\">Z: {totalDelta.position.z.toFixed(3)} m</Typography></li>\r\n\t\t\t\t\t\t\t\t<li><Typography variant=\"body2\">Angle: {totalDelta.rotation * 180/Math.PI}°</Typography></li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</ExpansionPanelDetails>\r\n\t\t\t\t</ExpansionPanel>\r\n\t\t\t\t<ExpansionPanel expanded={this.props.selectedSegment !== undefined}>\r\n\t\t\t\t\t<ExpansionPanelSummary>\r\n\t\t\t\t\t\t<Typography variant=\"h6\">Selected Segment</Typography>\r\n\t\t\t\t\t</ExpansionPanelSummary>\r\n\t\t\t\t\t<ExpansionPanelDetails style={{ flexDirection: 'column' }}>\r\n\t\t\t\t\t\t<SegmentEditor segment={this.props.selectedSegment} \r\n\t\t\t\t\t\t\t\tonSegmentUpdated={s => this.handleSegmentUpdated(s)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t</ExpansionPanelDetails>\r\n\t\t\t\t</ExpansionPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Toolbar, AppBar, Typography, CssBaseline, withStyles, Drawer, Button, MuiThemeProvider } from '@material-ui/core';\r\nimport Track from './classes/Track.js';\r\nimport theme from './ui/theme/index.js';\r\nimport TrackViewer from './components/TrackViewer.js';\r\nimport MainTrackEditor from './components/MainTrackEditor.js';\r\nimport lodash from 'lodash';\r\n\r\nconst drawerWidth = 300;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    paddingTop: 72,\r\n    maxHeight: '100vh'\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing.unit * 7,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing.unit * 9,\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  trackViewer: {\r\n    flexGrow: 1,\r\n    //padding: theme.spacing.unit * 3,\r\n    height: 'calc(100vh - 72px)',\r\n    overflow: 'hidden',\r\n    marginTop: 72\r\n  },\r\n  h5: {\r\n    marginBottom: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentTrack: new Track(),\r\n      selectedSegment: undefined\r\n    };\r\n  }\r\n\r\n  openTrackFile = (i_filePath) => {\r\n    if (i_filePath === undefined){\r\n      return;\r\n    }\r\n    let fileReader = new FileReader();\r\n    var self = this;\r\n    fileReader.onload = (e) => {\r\n      let content = fileReader.result;\r\n      let trackDocument = new DOMParser().parseFromString(content, 'text/xml');\r\n      self.loadDocument(trackDocument);\r\n    };\r\n    fileReader.readAsText(i_filePath);\r\n  }\r\n\r\n  loadDocument = (i_xmlDocument) => {\r\n    let track = new Track();\r\n    track.loadTORCSXml(i_xmlDocument);\r\n    this.setState({ currentTrack: track });\r\n  };\r\n\r\n  selectSegment = (segment) => {\r\n    this.setState({ selectedSegment: segment });\r\n  };\r\n\r\n  addSegment = (segment, insertionIndex) => {\r\n    let track = lodash.clone(this.state.currentTrack);\r\n    track.mainTrack.insertSegmentAt(segment, insertionIndex);\r\n    this.setState({ currentTrack: track, selectedSegment: track.mainTrack.trackSegments[insertionIndex] });\r\n  };\r\n\r\n  updateSegment = (segment) => {\r\n    const newTrack = lodash.clone(this.state.currentTrack);\r\n    //const selectedSegment = newTrack.findMainTrackSegment(segment);\r\n    this.setState({ currentTrack: newTrack });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <main className={classes.root}>\r\n          <AppBar color=\"primary\" position=\"absolute\" className={classes.appBar}>\r\n            <Toolbar className={classes.toolbar}>\r\n              <Typography component=\"h1\" variant=\"h5\" color=\"inherit\" noWrap className={classes.title}>\r\n                Track Editor - {this.state.currentTrack.header.name}\r\n              </Typography>\r\n              <input id=\"fileLoadFile\" type=\"file\" ref={(ref) => this.upload = ref} style={{ display: 'none' }} \r\n                onChange={e => this.openTrackFile(e.target.files[0])} />\r\n              <Button color=\"inherit\" onClick={(e) => this.upload.click() }>Open file</Button>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Drawer variant=\"permanent\" classes={{ paper: classes.drawerPaper }}>\r\n            <MainTrackEditor mainTrack={this.state.currentTrack.mainTrack} selectedSegment={this.state.selectedSegment}\r\n              onSegmentSelected={segment => this.selectSegment(segment)}\r\n              onSegmentUpdated={segment => this.updateSegment(segment)}\r\n            />\r\n          </Drawer>\r\n          <TrackViewer className={classes.trackViewer} \r\n            track={this.state.currentTrack} selectedSegment={this.state.selectedSegment}\r\n            onSegmentSelected={segment => this.selectSegment(segment)}\r\n            onSegmentAdded={(segment, insertionIndex) => this.addSegment(segment, insertionIndex)}\r\n          />\r\n        </main>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/straight.9829ae7d.svg\";","module.exports = __webpack_public_path__ + \"static/media/curve-right.b23ee55f.svg\";","module.exports = __webpack_public_path__ + \"static/media/curve-left.284f4c36.svg\";"],"sourceRoot":""}